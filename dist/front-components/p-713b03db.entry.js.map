{"version":3,"names":["FrontCountdownService","constructor","startDate","endDate","this","oneSecond","isNaN","getTime","Error","startCountdown","incrementOneSecond","Date","intervalId","setInterval","isCountdownFinished","stopCountdown","clearInterval","getMillisecondsDifference","diff","getTimeDifference","daysDiff","Math","floor","hoursDiff","minutesDiff","secondsDiff","frontCountdownCss","FrontCountdownStyle0","FrontCountdown","resetCountdown","days","hours","minutes","seconds","updateCountdown","service","countdownFinished","emit","String","padStart","requestAnimationFrame","bind","disconnectedCallback","loadCountdown","Number","_a","watchStartDateChange","watchEndDateChange","componentWillLoad","render","h","Host","key","class"],"sources":["src/components/ui/front-countdown/front-countdown.service.ts","src/components/ui/front-countdown/front-countdown.scss?tag=front-countdown&encapsulation=scoped","src/components/ui/front-countdown/front-countdown.tsx"],"sourcesContent":["import type { ICountdownService } from './ICountdownService';\nimport type { DateDifferenceType } from './front-countdown.type';\n\nexport class FrontCountdownService implements ICountdownService {\n  private oneSecond = 1000;\n  private intervalId: ReturnType<typeof setInterval>;\n\n  constructor(\n    private startDate: Date,\n    private endDate: Date,\n  ) {\n    if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {\n      throw new Error('Invalid date');\n    }\n    this.startCountdown();\n  }\n\n  private incrementOneSecond(): void {\n    this.startDate = new Date(this.startDate.getTime() + this.oneSecond);\n  }\n\n  startCountdown(): void {\n    this.intervalId = setInterval(() => {\n      this.incrementOneSecond();\n\n      if (this.isCountdownFinished()) {\n        this.stopCountdown();\n      }\n    }, this.oneSecond);\n  }\n\n  stopCountdown(): void {\n    clearInterval(this.intervalId);\n  }\n\n  getMillisecondsDifference(): number {\n    return this.endDate.getTime() - this.startDate.getTime();\n  }\n\n  isCountdownFinished(): boolean {\n    const diff = this.getMillisecondsDifference();\n    return diff <= 0;\n  }\n\n  getTimeDifference(): DateDifferenceType {\n    const diff = this.getMillisecondsDifference();\n\n    const daysDiff = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const hoursDiff = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const minutesDiff = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n    const secondsDiff = Math.floor((diff % (1000 * 60)) / 1000);\n\n    return {\n      daysDiff,\n      hoursDiff,\n      minutesDiff,\n      secondsDiff,\n    };\n  }\n}\n",":host {\n  display: block;\n}\n","import {\n  Component,\n  ComponentWillLoad,\n  Event,\n  EventEmitter,\n  Host,\n  Prop,\n  State,\n  Watch,\n  h,\n} from '@stencil/core';\nimport { FrontCountdownService } from './front-countdown.service';\n\n@Component({\n  tag: 'front-countdown',\n  styleUrl: 'front-countdown.scss',\n  shadow: false,\n  scoped: true,\n})\nexport class FrontCountdown implements ComponentWillLoad {\n  @Prop({ mutable: true }) startDate: string;\n  @Prop({ mutable: true }) endDate: string;\n\n  @State() days: string = '00';\n  @State() hours: string = '00';\n  @State() minutes: string = '00';\n  @State() seconds: string = '00';\n\n  @Event({ bubbles: true }) countdownFinished: EventEmitter;\n\n  private service: FrontCountdownService;\n\n  private resetCountdown() {\n    this.days = '00';\n    this.hours = '00';\n    this.minutes = '00';\n    this.seconds = '00';\n  }\n\n  private updateCountdown() {\n    if (this.service.isCountdownFinished()) {\n      this.resetCountdown();\n      this.countdownFinished.emit('finished');\n      return;\n    }\n\n    const { daysDiff, hoursDiff, minutesDiff, secondsDiff } = this.service.getTimeDifference();\n    this.days = String(daysDiff).padStart(2, '0');\n    this.hours = String(hoursDiff).padStart(2, '0');\n    this.minutes = String(minutesDiff).padStart(2, '0');\n    this.seconds = String(secondsDiff).padStart(2, '0');\n\n    requestAnimationFrame(this.updateCountdown.bind(this));\n  }\n\n  disconnectedCallback() {\n    if (!this.service) return;\n    this.service.stopCountdown();\n  }\n\n  private loadCountdown() {\n    if (!this.startDate || !this.endDate) return;\n    try {\n      this.service = new FrontCountdownService(\n        new Date(Number(this.startDate) || this.startDate),\n        new Date(Number(this.endDate) || this.endDate),\n      );\n      this.updateCountdown();\n    } catch {\n      this.resetCountdown();\n    }\n  }\n\n  @Watch('startDate')\n  watchStartDateChange() {\n    this.loadCountdown();\n  }\n\n  @Watch('endDate')\n  watchEndDateChange() {\n    this.loadCountdown();\n  }\n\n  componentWillLoad() {\n    this.loadCountdown();\n  }\n\n  render() {\n    return (\n      <Host class=\"timer\">\n        <div class=\"cell\">\n          <p class=\"time\">{this.days}</p>\n          <p class=\"unit\">dias</p>\n        </div>\n        <div class=\"cell\">\n          <p class=\"time\">{this.hours}</p>\n          <p class=\"unit\">horas</p>\n        </div>\n        <div class=\"cell\">\n          <p class=\"time\"> {this.minutes}</p>\n          <p class=\"unit\">minutos</p>\n        </div>\n        <div class=\"cell\">\n          <p class=\"time\">{this.seconds}</p>\n          <p class=\"unit\">segundos</p>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}