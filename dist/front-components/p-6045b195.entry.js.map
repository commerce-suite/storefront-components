{"version":3,"names":["DraggableService","constructor","onUpdatePosition","this","_isDragging","initialX","initialY","currentX","currentY","positionX","positionY","onDragStateChange","handleDragMove","event","clientX","MouseEvent","touches","clientY","handleDragEnd","removeDragEventListeners","isDragging","handleDragStart","preventDefault","addDragEventListeners","window","addEventListener","removeEventListener","miniPlayerCss","MiniPlayerStyle0","MiniPlayer","dragDropService","componentWillLoad","x","y","handleCloseMiniPlayer","showMiniPlayer","getMiniPlayerStyle","transform","getMiniPlayerBarStyle","cursor","componentDidLoad","componentRendered","emit","render","h","Host","key","class","style","onClick","src","getAssetPath","alt","videoId","autoPlay","onMouseDown","onTouchStart","mainTitle","onClickButton","buttonText"],"sources":["src/components/ui/mini-player/services/DraggableService.ts","src/components/ui/mini-player/mini-player.scss?tag=mini-player","src/components/ui/mini-player/mini-player.tsx"],"sourcesContent":["export class DraggableService {\n  private _isDragging: boolean = false;\n  private initialX: number = 0;\n  private initialY: number = 0;\n  private currentX: number = 0;\n  private currentY: number = 0;\n  private positionX: number = 0;\n  private positionY: number = 0;\n\n  public onDragStateChange: (isDragging: boolean) => void = () => {};\n  public onUpdatePosition: (x: number, y: number) => void;\n\n  constructor(onUpdatePosition: (x: number, y: number) => void) {\n    this.onUpdatePosition = onUpdatePosition;\n  }\n\n  public get isDragging() {\n    return this._isDragging;\n  }\n\n  public handleDragStart(event: MouseEvent | TouchEvent, positionX: number, positionY: number) {\n    event.preventDefault();\n    this._isDragging = true;\n\n    this.onDragStateChange(this._isDragging);\n\n    const clientX = event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n    const clientY = event instanceof MouseEvent ? event.clientY : event.touches[0].clientY;\n\n    this.initialX = clientX - positionX;\n    this.initialY = clientY - positionY;\n\n    this.positionX = positionX;\n    this.positionY = positionY;\n\n    this.addDragEventListeners();\n  }\n\n  public handleDragMove = (event: MouseEvent | TouchEvent) => {\n    if (!this._isDragging) return;\n\n    const clientX = event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n    const clientY = event instanceof MouseEvent ? event.clientY : event.touches[0].clientY;\n\n    this.currentX = clientX - this.initialX;\n    this.currentY = clientY - this.initialY;\n\n    this.positionX = this.currentX;\n    this.positionY = this.currentY;\n\n    this.onUpdatePosition(this.positionX, this.positionY);\n  };\n\n  public handleDragEnd = () => {\n    this._isDragging = false;\n    this.onDragStateChange(this._isDragging);\n    this.removeDragEventListeners();\n  };\n\n  private addDragEventListeners() {\n    window.addEventListener('mousemove', this.handleDragMove);\n    window.addEventListener('mouseup', this.handleDragEnd);\n    window.addEventListener('touchmove', this.handleDragMove);\n    window.addEventListener('touchend', this.handleDragEnd);\n  }\n\n  private removeDragEventListeners() {\n    window.removeEventListener('mousemove', this.handleDragMove);\n    window.removeEventListener('mouseup', this.handleDragEnd);\n    window.removeEventListener('touchmove', this.handleDragMove);\n    window.removeEventListener('touchend', this.handleDragEnd);\n  }\n}\n","@import '../../../style/mixins/button.scss';\n@import '../../../style/mixins/screen-media';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.mini-player {\n  position: fixed;\n  bottom: 10%;\n  left: 10px;\n  display: flex;\n  flex-direction: column;\n  z-index: 1000;\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: #000000;\n\n  @include for-desktop {\n    bottom: 10px;\n    width: 372px;\n  }\n\n  live-video-player {\n    width: 100%;\n    aspect-ratio: 16 / 9;\n\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      object-fit: cover;\n    }\n  }\n\n  &-bar {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 16px;\n    background-color: var(--color-secondary);\n    width: 100%;\n\n    @include for-desktop {\n      padding: 8px 16px;\n    }\n\n    &-title {\n      font-family: var(--h1-ff);\n      font-size: 12px;\n      text-transform: uppercase;\n      font-weight: bold;\n      color: var(--menu-background);\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 200px;\n      margin: 0;\n    }\n\n    &-button {\n      display: flex;\n      align-items: center;\n\n      button {\n        @include front-button;\n        text-transform: none;\n        font-size: 8px;\n        padding: 8px 16px;\n        color: var(--color-buy-button);\n        background-color: #ffffff;\n\n        @include for-desktop {\n          padding: 12px 24px;\n        }\n      }\n    }\n  }\n\n  &-close-button {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    z-index: 1001;\n    background: #ffffff;\n    border: none;\n    border-radius: 4px;\n    width: 28px;\n    height: 28px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    &:hover {\n      background: #c0c0c0;\n    }\n  }\n}\n","import { Component, Prop, Event, Host, EventEmitter, h, getAssetPath, State } from '@stencil/core';\nimport { DraggableService } from './services/DraggableService';\n\n@Component({\n  tag: 'mini-player',\n  styleUrl: 'mini-player.scss',\n  shadow: false,\n})\nexport class MiniPlayer {\n  @Prop() videoId: string;\n  @Prop() autoPlay: boolean = false;\n  @Prop() mainTitle: string = 'Mini Player Title';\n  @Prop() buttonText: string = 'Return';\n\n  @State() showMiniPlayer: boolean = true;\n  @State() positionX: number = 0;\n  @State() positionY: number = 0;\n  @State() isDragging: boolean = false;\n\n  @Event() componentRendered: EventEmitter<void>;\n  @Event({ bubbles: true, eventName: 'on-click-button' }) onClickButton: EventEmitter<void>;\n\n  private dragDropService: DraggableService;\n\n  componentWillLoad() {\n    this.dragDropService = new DraggableService((x, y) => {\n      this.positionX = x;\n      this.positionY = y;\n    });\n\n    this.dragDropService.onDragStateChange = (isDragging: boolean) => {\n      this.isDragging = isDragging;\n    };\n  }\n\n  private handleDragStart = (event: MouseEvent | TouchEvent) => {\n    this.dragDropService.handleDragStart(event, this.positionX, this.positionY);\n  };\n\n  private handleCloseMiniPlayer() {\n    this.showMiniPlayer = false;\n  }\n\n  private getMiniPlayerStyle() {\n    return {\n      transform: `translate(${this.positionX}px, ${this.positionY}px)`,\n    };\n  }\n\n  private getMiniPlayerBarStyle() {\n    return {\n      cursor: this.isDragging ? 'grabbing' : 'grab',\n    };\n  }\n\n  componentDidLoad() {\n    this.componentRendered.emit();\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.showMiniPlayer && (\n          <div class=\"mini-player\" style={this.getMiniPlayerStyle()}>\n            <button class=\"mini-player-close-button\" onClick={() => this.handleCloseMiniPlayer()}>\n              <img src={getAssetPath('./assets/icons/close-icon.svg')} alt=\"close-icon\" />\n            </button>\n            <live-video-player videoId={this.videoId} autoPlay={this.autoPlay} />\n            <div\n              class=\"mini-player-bar\"\n              style={this.getMiniPlayerBarStyle()}\n              onMouseDown={this.handleDragStart}\n              onTouchStart={this.handleDragStart}\n            >\n              <h6 class=\"mini-player-bar-title\">{this.mainTitle}</h6>\n              <div class=\"mini-player-bar-button\">\n                <button onClick={() => this.onClickButton.emit()}>{this.buttonText}</button>\n              </div>\n            </div>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}