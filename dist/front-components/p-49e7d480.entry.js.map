{"version":3,"names":["colorSelectorCss","ColorSelectorStyle0","ColorSelector","onSelectColor","color","this","colorSelected","emit","getColorStyle","image","backgroundImage","src","backgroundSize","backgroundPosition","backgroundColor","hexadecimal","render","h","Host","key","class","colors","map","id","active","selectedId","onClick","name","title","style","customCardCss","CustomCardStyle0","CustomCard","componentDidLoad","componentRendered","customClass","cardTitle","cardDescription"],"sources":["src/components/ui/color-selector/color-selector.scss?tag=color-selector","src/components/ui/color-selector/color-selector.tsx","src/components/ui/custom-card/custom-card.scss?tag=custom-card","src/components/ui/custom-card/custom-card.tsx"],"sourcesContent":[".color-selector {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n\n  .color-option {\n    position: relative;\n    width: 25px;\n    height: 25px;\n    border: none;\n    background: transparent;\n    border-radius: 50%;\n    padding: 0;\n    cursor: pointer;\n    outline: none;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      box-sizing: border-box;\n      border: 1px solid #ededed;\n    }\n\n    &.active::before {\n      border: 2px solid #000000;\n    }\n\n    .color-dot {\n      width: 15px;\n      height: 15px;\n      border-radius: 50%;\n      background-color: currentColor;\n      z-index: 1;\n    }\n  }\n}\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\nimport { IColor } from '../product-card/product-card.type';\n\n@Component({\n  tag: 'color-selector',\n  styleUrl: 'color-selector.scss',\n  shadow: false,\n})\nexport class ColorSelector {\n  @Prop() colors: IColor[] = [];\n  @Prop() selectedId?: number;\n\n  @Event() colorSelected: EventEmitter<IColor>;\n\n  private onSelectColor(color: IColor) {\n    this.colorSelected.emit(color);\n  }\n\n  private getColorStyle(color: IColor) {\n    return color.image\n      ? {\n          backgroundImage: `url(${color.image.src})`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n        }\n      : {\n          backgroundColor: color.hexadecimal,\n        };\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"color-selector\">\n          {this.colors.map(color => (\n            <button\n              key={color.id}\n              class={{\n                'color-option': true,\n                'active': this.selectedId === color.id,\n              }}\n              onClick={() => this.onSelectColor(color)}\n              aria-label={color.name}\n              title={color.name}\n            >\n              <span class=\"color-dot\" style={this.getColorStyle(color)}></span>\n            </button>\n          ))}\n        </div>\n      </Host>\n    );\n  }\n}\n","@import '../../../style/mixins/screen-media.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.custom-card {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 24px;\n\n  &-header {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n\n    &-title,\n    &-description {\n      margin: 0;\n      text-align: center;\n    }\n\n    &-title {\n      font-family: var(--h1-ff);\n      color: var(--fc-color-primary);\n      font-weight: 700;\n      font-size: 24px;\n      text-transform: uppercase;\n      word-break: break-word;\n    }\n\n    &-description {\n      font-size: 16px;\n    }\n  }\n\n  @include for-desktop {\n    gap: 40px;\n  }\n}\n\n.custom-card-content:empty {\n  display: none;\n}\n","import { Component, Event, Host, EventEmitter, h, Prop, Element } from '@stencil/core';\n\n@Component({\n  tag: 'custom-card',\n  styleUrl: 'custom-card.scss',\n  shadow: false,\n})\nexport class CustomCard {\n  @Prop() cardTitle: string = 'Não perca! Live hoje às 19 horas.';\n  @Prop() cardDescription: string;\n  @Prop() customClass: string = '';\n\n  @Element() el: HTMLElement;\n  @Event() componentRendered: EventEmitter<void>;\n\n  componentDidLoad() {\n    this.componentRendered.emit();\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={`custom-card ${this.customClass}`}>\n          <div class=\"custom-card-header\">\n            <h2 class=\"custom-card-header-title\">{this.cardTitle}</h2>\n            {this.cardDescription && (\n              <p class=\"custom-card-header-description\">{this.cardDescription}</p>\n            )}\n          </div>\n          <div class=\"custom-card-content\">\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"gEAAA,MAAMA,EAAmB,ynBACzB,MAAAC,EAAeD,E,MCOFE,EAAa,M,kFACG,G,0BAKnB,aAAAC,CAAcC,GACpBC,KAAKC,cAAcC,KAAKH,E,CAGlB,aAAAI,CAAcJ,GACpB,OAAOA,EAAMK,MACT,CACEC,gBAAiB,OAAON,EAAMK,MAAME,OACpCC,eAAgB,QAChBC,mBAAoB,UAEtB,CACEC,gBAAiBV,EAAMW,Y,CAI/B,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,OAAAE,IAAA,2CAAKC,MAAM,kBACRf,KAAKgB,OAAOC,KAAIlB,GACfa,EAAA,UACEE,IAAKf,EAAMmB,GACXH,MAAO,CACL,eAAgB,KAChBI,OAAUnB,KAAKoB,aAAerB,EAAMmB,IAEtCG,QAAS,IAAMrB,KAAKF,cAAcC,GAAM,aAC5BA,EAAMuB,KAClBC,MAAOxB,EAAMuB,MAEbV,EAAA,QAAMG,MAAM,YAAYS,MAAOxB,KAAKG,cAAcJ,S,aC7ChE,MAAM0B,EAAgB,ykBACtB,MAAAC,EAAeD,E,MCMFE,EAAU,M,6FACO,oC,gDAEE,E,CAK9B,gBAAAC,GACE5B,KAAK6B,kBAAkB3B,M,CAGzB,MAAAS,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,OAAAE,IAAA,2CAAKC,MAAO,eAAef,KAAK8B,eAC9BlB,EAAA,OAAAE,IAAA,2CAAKC,MAAM,sBACTH,EAAA,MAAAE,IAAA,2CAAIC,MAAM,4BAA4Bf,KAAK+B,WAC1C/B,KAAKgC,iBACJpB,EAAA,KAAAE,IAAA,2CAAGC,MAAM,kCAAkCf,KAAKgC,kBAGpDpB,EAAA,OAAAE,IAAA,2CAAKC,MAAM,uBACTH,EAAA,QAAAE,IAAA,+C"}