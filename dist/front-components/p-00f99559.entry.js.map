{"version":3,"names":["defaultContent","page_title","page_content","active","image","newsletter","colors","title","content","button_background","button_text","content_background","MaintenanceModeService","getAppContent","AppService","getBySlug","JSON","parse","error","console","submitNewsletter","formData","url","window","dooca","base_url","response","fetch","method","body","ok","json","Error","stringify","maintenanceModeCss","MaintenanceModeStyle0","MaintenanceMode","load","this","isInitialLoading","maintenanceModeData","maintenanceModeService","handleSubmit","event","preventDefault","form","target","FormData","append","isLoading","userMessage","text","type","defaultMessage","errors","message","errorMessage","handleTokenReceived","recaptchaToken","detail","componentWillLoad","componentDidLoad","componentRendered","emit","render","pageTitle","pageContent","contentBackground","buttonBackground","buttonText","document","documentElement","style","setProperty","h","Host","key","class","src","alt","onSubmit","e","name","placeholder","required","siteKey","Env","GOOGLE_RECAPTCHA_SITE_KEY","disabled"],"sources":["src/components/maintenance-mode/constants/defaultContent.ts","src/components/maintenance-mode/maintenance-mode.service.ts","src/components/maintenance-mode/maintenance-mode.scss?tag=maintenance-mode","src/components/maintenance-mode/maintenance-mode.tsx"],"sourcesContent":["import { IMaintenanceMode } from '../maintenance-mode.type';\n\nexport const defaultContent: IMaintenanceMode = {\n  page_title: 'Loja em manutenção',\n  page_content:\n    'Estamos temporariamente em manutenção. Voltaremos em breve com novidades para você!',\n  active: false,\n  image: null,\n  newsletter: true,\n  colors: {\n    title: '#212529',\n    content: '#535862',\n    button_background: '#212529',\n    button_text: '#FFFFFF',\n    content_background: '#FFFFFF',\n  },\n};\n","import { AppService } from '@uxshop/storefront-core';\nimport { defaultContent } from './constants/defaultContent';\n\nexport class MaintenanceModeService {\n  public async getAppContent() {\n    try {\n      const { content } = await AppService.getBySlug('maintenance-mode');\n      return JSON.parse(content);\n    } catch (error) {\n      console.error(error);\n      return defaultContent;\n    }\n  }\n\n  public async submitNewsletter(formData: FormData) {\n    const url = `${window.dooca.base_url}/action/newsletter/add`;\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(JSON.stringify(error));\n      }\n\n      return response.json();\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n}\n","@import '../../style/mixins/button';\n@import '../../style/mixins/screen-media';\n@import '../../style/mixins/spinner-loading.scss';\n\nbody {\n  margin: 0;\n}\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.loading-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparentize(#000000, 0.5);\n  z-index: 9999;\n\n  .spinner {\n    @include simple-spinner;\n  }\n}\n\n.maintenance-mode-container {\n  background-color: var(--maintenance-bg);\n}\n\n.maintenance-mode {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 24px;\n\n  @include for-desktop {\n    flex-direction: row;\n  }\n\n  &-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 24px;\n    text-align: center;\n    max-width: 480px;\n\n    @include for-desktop {\n      padding: 24px;\n    }\n\n    img {\n      border-radius: 12px;\n      object-fit: cover;\n      object-position: center;\n\n      width: 346px;\n      height: 172px;\n\n      @include for-desktop {\n        width: 432px;\n        height: 238px;\n      }\n    }\n\n    &-label {\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n      width: 346px;\n\n      @include for-desktop {\n        width: 100%;\n      }\n\n      h1,\n      p {\n        margin: 0;\n      }\n\n      h1 {\n        color: var(--maintenance-title);\n        font-weight: 700;\n        font-size: 28px;\n      }\n\n      p {\n        color: var(--maintenance-text);\n        font-size: 14px;\n      }\n    }\n\n    &-message {\n      display: flex;\n      justify-content: center;\n      gap: 16px;\n      padding: 20px;\n      border-radius: 12px;\n      background: #ffffff;\n      border: 1px solid #cccccc66;\n      width: 100%;\n\n      @include for-desktop {\n        width: 480px;\n        padding: 24px;\n      }\n\n      &-success {\n        color: #28a745;\n      }\n\n      &-error {\n        color: #dc3545;\n      }\n    }\n  }\n\n  &-form {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    padding: 20px;\n    border-radius: 12px;\n    background: #ffffff;\n    border: 1px solid #cccccc66;\n\n    @include for-desktop {\n      width: 480px;\n      padding: 24px;\n    }\n\n    &-label {\n      h2 {\n        font-size: 14px;\n        text-align: center;\n        margin: 0;\n        font-weight: 600;\n      }\n    }\n\n    &-content {\n      display: flex;\n      flex-direction: column;\n      gap: 24px;\n\n      &-input {\n        display: flex;\n        flex-direction: column;\n        gap: 24px;\n\n        input {\n          padding: 10px 14px;\n          border: 1px solid #d5d7da;\n          border-radius: 8px;\n          font-size: 16px;\n\n          &::placeholder {\n            color: #717680;\n          }\n\n          &:focus {\n            outline: none;\n            border: 1px solid #000000;\n          }\n        }\n      }\n\n      &-button {\n        @include front-button;\n        background-color: var(--maintenance-button-bg);\n        color: var(--maintenance-button-color);\n      }\n    }\n  }\n}\n","import { Component, Env, Event, EventEmitter, h, Host, Listen, State } from '@stencil/core';\nimport { IMaintenanceMode } from './maintenance-mode.type';\nimport { defaultContent } from './constants/defaultContent';\nimport { MaintenanceModeService } from './maintenance-mode.service';\n\n@Component({\n  tag: 'maintenance-mode',\n  styleUrl: 'maintenance-mode.scss',\n  shadow: false,\n})\nexport class MaintenanceMode {\n  @State() maintenanceModeData: IMaintenanceMode = defaultContent;\n  @State() maintenanceModeService = new MaintenanceModeService();\n  @State() recaptchaToken: string;\n  @State() isLoading = false;\n  @State() isInitialLoading = false;\n  @State() userMessage: {\n    text: string;\n    type: 'success' | 'error';\n  };\n\n  @Event() componentRendered: EventEmitter<void>;\n\n  private async load() {\n    this.isInitialLoading = true;\n\n    try {\n      this.maintenanceModeData = await this.maintenanceModeService.getAppContent();\n    } catch (error) {\n      console.error('MaintenanceMode - load', { error });\n    } finally {\n      this.isInitialLoading = false;\n    }\n  }\n\n  private async handleSubmit(event: Event) {\n    event.preventDefault();\n\n    const form = event.target as HTMLFormElement;\n    const formData = new FormData(form);\n\n    formData.append('form_type', 'newsletter');\n\n    try {\n      this.isLoading = true;\n      await this.maintenanceModeService.submitNewsletter(formData);\n      this.userMessage = {\n        text: 'E-mail cadastrado',\n        type: 'success',\n      };\n    } catch (error) {\n      console.error('MaintenanceMode - handleSubmit', { error });\n      const defaultMessage = 'Ocorreu um erro, tente novamente mais tarde';\n      const errors = error?.message ? JSON.parse(error.message) : { errors: [defaultMessage] };\n      const [errorMessage] = errors.errors;\n\n      this.userMessage = {\n        text: errorMessage || defaultMessage,\n        type: 'error',\n      };\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  @Listen('tokenReceived')\n  handleTokenReceived(event: CustomEvent<string>) {\n    this.recaptchaToken = event.detail;\n  }\n\n  async componentWillLoad() {\n    await this.load();\n  }\n\n  componentDidLoad() {\n    this.componentRendered.emit();\n  }\n\n  render() {\n    const {\n      page_title: pageTitle,\n      page_content: pageContent,\n      colors,\n      image,\n      newsletter,\n    } = this.maintenanceModeData;\n\n    const {\n      content_background: contentBackground,\n      title,\n      content,\n      button_background: buttonBackground,\n      button_text: buttonText,\n    } = colors;\n\n    document.documentElement.style.setProperty('--maintenance-bg', contentBackground);\n\n    return (\n      <Host\n        style={{\n          '--maintenance-bg': contentBackground,\n          '--maintenance-title': title,\n          '--maintenance-text': content,\n          '--maintenance-button-bg': buttonBackground,\n          '--maintenance-button-color': buttonText,\n        }}\n      >\n        {this.isLoading && (\n          <div class=\"loading-container\">\n            <span class=\"spinner\" />\n          </div>\n        )}\n\n        {this.maintenanceModeData && !this.isInitialLoading && (\n          <div class=\"maintenance-mode maintenance-mode-container\">\n            <div class=\"maintenance-mode-content\">\n              <div class=\"maintenance-mode-content-label\">\n                <h1>{pageTitle}</h1>\n                <p>{pageContent}</p>\n              </div>\n\n              {image && <img src={image.src} alt=\"maintenance-mode-image\" />}\n            </div>\n\n            {newsletter && !this.userMessage && (\n              <form\n                onSubmit={e => this.handleSubmit(e)}\n                name=\"newsletter\"\n                class=\"maintenance-mode-form\"\n              >\n                <div class=\"maintenance-mode-form-label\">\n                  <h2>Cadastre-se para receber novidades</h2>\n                </div>\n                <div class=\"maintenance-mode-form-content\">\n                  <div class=\"maintenance-mode-form-content-input\">\n                    <input type=\"text\" name=\"name\" placeholder=\"Seu nome\" required />\n                    <input type=\"email\" name=\"email\" placeholder=\"Seu email\" required />\n                  </div>\n\n                  <google-recaptcha siteKey={Env.GOOGLE_RECAPTCHA_SITE_KEY} />\n\n                  <button\n                    class=\"maintenance-mode-form-content-button\"\n                    type=\"submit\"\n                    disabled={!this.recaptchaToken}\n                  >\n                    Quero me inscrever\n                  </button>\n                </div>\n              </form>\n            )}\n\n            {this.userMessage && (\n              <div\n                class={`maintenance-mode-content-message maintenance-mode-content-message-${this.userMessage.type}`}\n              >\n                <span>{this.userMessage.text}</span>\n              </div>\n            )}\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}