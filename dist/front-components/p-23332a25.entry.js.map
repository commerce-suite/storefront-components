{"version":3,"names":["frontImageCss","FrontImageStyle0","FrontImage","getImageClassByProps","classProps","this","isSrcLoading","getClassByProps","onSrcLoadFinish","setTimeout","changeImageSrc","render","h","Host","key","class","src","imageSrc","alt","textAlt","onLoad","figCaption","productCardCss","ProductCardStyle0","ProductCard","getClassWithInline","className","prosForClass","inline","customClass","_b","_a","product","image","_d","_c","_e","name","basePrice","paymentOptions","productPriceCss","ProductPriceStyle0","ProductPrice","componentMap","simple","option","price","priceCompare","billet","creditCard","parcels","parcelPrice","hasInterest","pix","renderPaymentOption","renderFn","type","options","length","map","ProductPriceBilletStyle0","ProductPriceBillet","formattedPrice","currencyFormat","formattedCompare","ProductPriceCreditCardStyle0","ProductPriceCreditCard","formattedParcelPrice","interestText","ProductPricePixStyle0","ProductPricePix","ProductPriceSimpleStyle0","ProductPriceSimple"],"sources":["src/components/ui/front-image/front-image.scss?tag=front-image","src/components/ui/front-image/front-image.tsx","src/components/ui/product-card/product-card.scss?tag=product-card","src/components/ui/product-card/product-card.tsx","src/components/ui/product-price/product-price.scss?tag=product-price","src/components/ui/product-price/product-price.tsx","src/components/ui/product-price/product-price.scss?tag=product-price-billet","src/components/ui/product-price/snippets/billet/product-price-billet.tsx","src/components/ui/product-price/product-price.scss?tag=product-price-credit-card","src/components/ui/product-price/snippets/credit-card/product-price-credit-card.tsx","src/components/ui/product-price/product-price.scss?tag=product-price-pix","src/components/ui/product-price/snippets/pix/product-price-pix.tsx","src/components/ui/product-price/product-price.scss?tag=product-price-simple","src/components/ui/product-price/snippets/simple/product-price-simple.tsx"],"sourcesContent":["@import '../../../style/mixins/skeleton.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.image-container {\n  position: relative;\n  margin: unset;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n    opacity: 1;\n    transition: opacity 1s;\n  }\n  &.-is-loading {\n    min-width: 100px;\n    min-height: 100px;\n    img {\n      opacity: 0;\n    }\n    @include skeleton;\n  }\n}\n","import { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { getClassByProps } from '../../../utils/utils';\n\n@Component({\n  tag: 'front-image',\n  styleUrl: 'front-image.scss',\n  scoped: false,\n  shadow: false,\n})\nexport class FrontImage {\n  @Prop({ mutable: true }) imageSrc: string;\n  @Prop({ mutable: true }) textAlt: string;\n  @Prop({ mutable: true }) figCaption: string;\n\n  @State() isSrcLoading = true;\n\n  private getImageClassByProps() {\n    const classProps = {\n      '-is-loading': this.isSrcLoading,\n    };\n    return `image-container ${getClassByProps(classProps)}`;\n  }\n\n  // private onSrcLoadError() {\n  //   this.imageSrc = getAssetPath('./assets/images/image-fallback.png');\n  //   setTimeout(() => {\n  //     this.isSrcLoading = false;\n  //   }, 500);\n  // }\n\n  private onSrcLoadFinish() {\n    setTimeout(() => {\n      this.isSrcLoading = false;\n    }, 500);\n  }\n\n  @Watch('imageSrc')\n  changeImageSrc() {\n    this.isSrcLoading = true;\n  }\n\n  render() {\n    return (\n      <Host>\n        <figure class={this.getImageClassByProps()}>\n          <img\n            src={this.imageSrc}\n            alt={this.textAlt || 'Imagem'}\n            onLoad={() => this.onSrcLoadFinish()}\n          />\n          {!!this.figCaption && <figcaption>{this.figCaption}</figcaption>}\n        </figure>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: inline-block;\n  font-size: 14px;\n  width: 100%;\n}\n\n.product-container {\n  display: flex;\n  flex-direction: column;\n  gap: var(--fc-gap-grid) 0;\n  color: var(--fc-color-light-text-default);\n\n  &.-inline {\n    flex-direction: row;\n    gap: var(--fc-gap-grid);\n  }\n}\n\n.product-container > .info {\n  grid-area: info;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  > .title {\n    display: inline-block;\n    margin-bottom: var(--fc-margin-width);\n    font-weight: 600;\n  }\n}\n\n.product-container > .image {\n  display: flex;\n  align-self: center;\n  max-width: 400px;\n  max-height: 400px;\n  justify-content: center;\n  &.-inline {\n    width: 100px;\n    height: 100px;\n    justify-content: center;\n  }\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\nimport { IProductCard } from './product-card.type';\nimport { getClassByProps } from '../../../utils/utils';\nimport { BasePrice, PaymentOption } from '../product-price/product-price.type';\n\n@Component({\n  tag: 'product-card',\n  styleUrl: 'product-card.scss',\n  shadow: false,\n  scoped: false,\n})\nexport class ProductCard {\n  @Prop() inline: boolean = false;\n  @Prop() customClass: string = '';\n  @Prop({ mutable: true }) product: IProductCard;\n  @Prop() basePrice: BasePrice;\n  @Prop() paymentOptions?: PaymentOption[] = [];\n\n  getClassWithInline(className: string) {\n    const prosForClass = { '-inline': this.inline };\n    return `${className} ${getClassByProps(prosForClass)} ${this.customClass}`;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={this.getClassWithInline('product-container')}>\n          <front-image\n            class={this.getClassWithInline('image')}\n            imageSrc={this.product?.image?.src}\n            textAlt={this.product?.image?.alt || 'Imagem do produto'}\n          />\n          <div class=\"info\">\n            <span class=\"title\">{this.product?.name}</span>\n            <product-price basePrice={this.basePrice} paymentOptions={this.paymentOptions} />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","@import '../../../style/variables/variables.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.product-price-container {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.payment-option {\n  font-size: 14px;\n\n  .price-compare {\n    text-decoration: line-through;\n    color: var(--fc-color-light-text-secondary);\n  }\n\n  .price-current {\n    .highlight {\n      font-weight: bold;\n    }\n  }\n\n  &-simple,\n  &-billet,\n  &-pix {\n    display: flex;\n    flex-direction: column;\n\n    .highlight {\n      font-size: 16px;\n    }\n  }\n\n  &-creditCard {\n    display: flex;\n    flex-direction: column;\n  }\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\nimport { BasePrice, PaymentOption } from './product-price.type';\n\n@Component({\n  tag: 'product-price',\n  styleUrl: 'product-price.scss',\n  shadow: false,\n  scoped: false,\n})\nexport class ProductPrice {\n  @Prop() basePrice: BasePrice;\n  @Prop() paymentOptions?: PaymentOption[];\n\n  private componentMap = {\n    simple: (option: PaymentOption) => (\n      <product-price-simple price={option.price} priceCompare={option.priceCompare} />\n    ),\n    billet: (option: PaymentOption) => (\n      <product-price-billet price={option.price} priceCompare={option.priceCompare} />\n    ),\n    creditCard: (option: PaymentOption) => (\n      <product-price-credit-card\n        price={option.price}\n        priceCompare={option.priceCompare}\n        parcels={option.parcels}\n        parcelPrice={option.parcelPrice}\n        hasInterest={option.hasInterest}\n      />\n    ),\n    pix: (option: PaymentOption) => (\n      <product-price-pix price={option.price} priceCompare={option.priceCompare} />\n    ),\n  };\n\n  private renderPaymentOption(option: PaymentOption) {\n    const renderFn = this.componentMap[option.type] || this.componentMap.simple;\n    return renderFn(option);\n  }\n\n  render() {\n    const options = this.paymentOptions || [];\n\n    if (!options.length) {\n      return (\n        <Host>\n          <div class=\"product-price-container\">\n            {this.componentMap.simple({\n              type: 'simple',\n              price: this.basePrice.price,\n              priceCompare: this.basePrice.priceCompare,\n            })}\n          </div>\n        </Host>\n      );\n    }\n\n    return (\n      <Host>\n        <div class=\"product-price-container\">\n          {options.map(option => this.renderPaymentOption(option))}\n        </div>\n      </Host>\n    );\n  }\n}\n","@import '../../../style/variables/variables.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.product-price-container {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.payment-option {\n  font-size: 14px;\n\n  .price-compare {\n    text-decoration: line-through;\n    color: var(--fc-color-light-text-secondary);\n  }\n\n  .price-current {\n    .highlight {\n      font-weight: bold;\n    }\n  }\n\n  &-simple,\n  &-billet,\n  &-pix {\n    display: flex;\n    flex-direction: column;\n\n    .highlight {\n      font-size: 16px;\n    }\n  }\n\n  &-creditCard {\n    display: flex;\n    flex-direction: column;\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport { currencyFormat } from '../../../../../utils/utils';\nimport { BasePrice } from '../../product-price.type';\n\n@Component({\n  tag: 'product-price-billet',\n  styleUrl: '../../product-price.scss',\n  shadow: false,\n  scoped: false,\n})\nexport class ProductPriceBillet implements BasePrice {\n  @Prop() price: number;\n  @Prop() priceCompare?: number;\n\n  render() {\n    const formattedPrice = currencyFormat(this.price);\n    const formattedCompare = this.priceCompare ? currencyFormat(this.priceCompare) : null;\n\n    return (\n      <div class=\"payment-option payment-option-billet\">\n        {formattedCompare && <span class=\"price-compare\">{formattedCompare}</span>}\n        <span class=\"price-current\">\n          <span class=\"highlight\">{formattedPrice}</span> no boleto\n        </span>\n      </div>\n    );\n  }\n}\n","@import '../../../style/variables/variables.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.product-price-container {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.payment-option {\n  font-size: 14px;\n\n  .price-compare {\n    text-decoration: line-through;\n    color: var(--fc-color-light-text-secondary);\n  }\n\n  .price-current {\n    .highlight {\n      font-weight: bold;\n    }\n  }\n\n  &-simple,\n  &-billet,\n  &-pix {\n    display: flex;\n    flex-direction: column;\n\n    .highlight {\n      font-size: 16px;\n    }\n  }\n\n  &-creditCard {\n    display: flex;\n    flex-direction: column;\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport { currencyFormat } from '../../../../../utils/utils';\nimport { CreditCardPrice } from '../../product-price.type';\n\n@Component({\n  tag: 'product-price-credit-card',\n  styleUrl: '../../product-price.scss',\n  shadow: false,\n  scoped: false,\n})\nexport class ProductPriceCreditCard implements CreditCardPrice {\n  @Prop() price: number;\n  @Prop() priceCompare?: number;\n  @Prop() parcels: number;\n  @Prop() parcelPrice: number;\n  @Prop() hasInterest: boolean;\n\n  render() {\n    const formattedPrice = currencyFormat(this.price);\n    const formattedCompare = this.priceCompare ? currencyFormat(this.priceCompare) : null;\n    const formattedParcelPrice = this.parcelPrice ? currencyFormat(this.parcelPrice) : null;\n    const interestText = this.hasInterest ? 'com juros' : 'sem juros';\n\n    return (\n      <div class=\"payment-option payment-option-creditCard\">\n        {formattedCompare && <span class=\"price-compare\">{formattedCompare}</span>}\n        <span class=\"price-current\">\n          <span class=\"highlight\">{formattedPrice}</span>{' '}\n          {this.parcels && this.parcelPrice && (\n            <span class=\"credit-info\">\n              em até <span class=\"highlight\">{this.parcels}x</span> de{' '}\n              <span class=\"highlight\">{formattedParcelPrice}</span> {interestText}\n            </span>\n          )}\n        </span>\n      </div>\n    );\n  }\n}\n","@import '../../../style/variables/variables.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.product-price-container {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.payment-option {\n  font-size: 14px;\n\n  .price-compare {\n    text-decoration: line-through;\n    color: var(--fc-color-light-text-secondary);\n  }\n\n  .price-current {\n    .highlight {\n      font-weight: bold;\n    }\n  }\n\n  &-simple,\n  &-billet,\n  &-pix {\n    display: flex;\n    flex-direction: column;\n\n    .highlight {\n      font-size: 16px;\n    }\n  }\n\n  &-creditCard {\n    display: flex;\n    flex-direction: column;\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport { currencyFormat } from '../../../../../utils/utils';\nimport { BasePrice } from '../../product-price.type';\n\n@Component({\n  tag: 'product-price-pix',\n  styleUrl: '../../product-price.scss',\n  shadow: false,\n  scoped: false,\n})\nexport class ProductPricePix implements BasePrice {\n  @Prop() price: number;\n  @Prop() priceCompare?: number;\n\n  render() {\n    const formattedPrice = currencyFormat(this.price);\n    const formattedCompare = this.priceCompare ? currencyFormat(this.priceCompare) : null;\n\n    return (\n      <div class=\"payment-option payment-option-pix\">\n        {formattedCompare && <span class=\"price-compare\">{formattedCompare}</span>}\n        <span class=\"price-current\">\n          <span class=\"highlight\">{formattedPrice}</span> no pix\n        </span>\n      </div>\n    );\n  }\n}\n","@import '../../../style/variables/variables.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.product-price-container {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.payment-option {\n  font-size: 14px;\n\n  .price-compare {\n    text-decoration: line-through;\n    color: var(--fc-color-light-text-secondary);\n  }\n\n  .price-current {\n    .highlight {\n      font-weight: bold;\n    }\n  }\n\n  &-simple,\n  &-billet,\n  &-pix {\n    display: flex;\n    flex-direction: column;\n\n    .highlight {\n      font-size: 16px;\n    }\n  }\n\n  &-creditCard {\n    display: flex;\n    flex-direction: column;\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport { currencyFormat } from '../../../../../utils/utils';\nimport { BasePrice } from '../../product-price.type';\n\n@Component({\n  tag: 'product-price-simple',\n  styleUrl: '../../product-price.scss',\n  shadow: false,\n  scoped: false,\n})\nexport class ProductPriceSimple implements BasePrice {\n  @Prop() price: number;\n  @Prop() priceCompare?: number;\n\n  render() {\n    const formattedPrice = currencyFormat(this.price);\n    const formattedCompare = this.priceCompare ? currencyFormat(this.priceCompare) : null;\n\n    return (\n      <div class=\"payment-option payment-option-simple\">\n        {formattedCompare && <span class=\"price-compare\">{formattedCompare}</span>}\n        <span class=\"price-current\">\n          <span class=\"highlight\">{formattedPrice}</span>\n        </span>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"}