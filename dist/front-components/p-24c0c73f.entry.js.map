{"version":3,"names":["frontIconCss","FrontIconStyle0","FrontIcon","render","h","key","class","style","color","this","fontSize","size","name","liveVideoPlayerCss","LiveVideoPlayerStyle0","LiveVideoPlayer","getVideoUrl","autoPlay","videoId","mute","componentDidLoad","componentRendered","emit","Host","src","frameborder","allow","allowFullScreen","DraggableService","constructor","onUpdatePosition","_isDragging","initialX","initialY","currentX","currentY","positionX","positionY","onDragStateChange","handleDragMove","event","clientX","MouseEvent","touches","clientY","handleDragEnd","removeDragEventListeners","isDragging","handleDragStart","preventDefault","addDragEventListeners","window","addEventListener","removeEventListener","miniPlayerCss","MiniPlayerStyle0","MiniPlayer","dragDropService","componentWillLoad","x","y","handleTouchStart","target","tagName","stopPropagation","handleCloseMiniPlayer","showMiniPlayer","getMiniPlayerStyle","transform","getMiniPlayerBarStyle","cursor","onClick","onMouseDown","onTouchStart","mainTitle","onClickMiniPlayerButton","buttonText"],"sources":["src/components/ui/front-icon/front-icon.css?tag=front-icon","src/components/ui/front-icon/front-icon.tsx","src/components/ui/live-video-player/live-video-player.scss?tag=live-video-player","src/components/ui/live-video-player/live-video-player.tsx","src/components/ui/mini-player/services/DraggableService.ts","src/components/ui/mini-player/mini-player.scss?tag=mini-player","src/components/ui/mini-player/mini-player.tsx"],"sourcesContent":["@import url('https://fonts.googleapis.com/icon?family=Material+Icons');\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'front-icon',\n  styleUrl: 'front-icon.css',\n  shadow: false,\n})\nexport class FrontIcon {\n  @Prop() name: string = 'home';\n  @Prop() size?: string = '24px';\n  @Prop() color: string = '#000';\n\n  render() {\n    return (\n      <span class=\"material-icons\" style={{ color: this.color, fontSize: this.size }}>\n        {this.name}\n      </span>\n    );\n  }\n}\n",":host {\n  display: inline-block;\n  width: 100%;\n}\n\n.live-video-player {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n\n  & iframe {\n    height: 100%;\n    width: 100%;\n  }\n}\n","import { Component, Prop, Event, Host, EventEmitter, h } from '@stencil/core';\n\n@Component({\n  tag: 'live-video-player',\n  styleUrl: 'live-video-player.scss',\n  shadow: false,\n})\nexport class LiveVideoPlayer {\n  @Prop() videoId: string;\n  @Prop() autoPlay: boolean = false;\n  @Prop() mute: boolean = true;\n\n  @Event()\n  componentRendered: EventEmitter<void>;\n\n  private getVideoUrl() {\n    if (this.autoPlay)\n      return `https://www.youtube.com/embed/${this.videoId}?autoplay=1&mute=${+this.mute}`;\n    return `https://www.youtube.com/embed/${this.videoId}`;\n  }\n\n  componentDidLoad() {\n    this.componentRendered.emit();\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"live-video-player\">\n          <iframe\n            src={this.getVideoUrl()}\n            frameborder=\"0\"\n            allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          />\n        </div>\n      </Host>\n    );\n  }\n}\n","export class DraggableService {\n  private _isDragging: boolean = false;\n  private initialX: number = 0;\n  private initialY: number = 0;\n  private currentX: number = 0;\n  private currentY: number = 0;\n  private positionX: number = 0;\n  private positionY: number = 0;\n\n  public onDragStateChange: (isDragging: boolean) => void = () => {};\n  public onUpdatePosition: (x: number, y: number) => void;\n\n  constructor(onUpdatePosition: (x: number, y: number) => void) {\n    this.onUpdatePosition = onUpdatePosition;\n  }\n\n  public get isDragging() {\n    return this._isDragging;\n  }\n\n  public handleDragStart(event: MouseEvent | TouchEvent, positionX: number, positionY: number) {\n    event.preventDefault();\n    this._isDragging = true;\n\n    this.onDragStateChange(this._isDragging);\n\n    const clientX = event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n    const clientY = event instanceof MouseEvent ? event.clientY : event.touches[0].clientY;\n\n    this.initialX = clientX - positionX;\n    this.initialY = clientY - positionY;\n\n    this.positionX = positionX;\n    this.positionY = positionY;\n\n    this.addDragEventListeners();\n  }\n\n  public handleDragMove = (event: MouseEvent | TouchEvent) => {\n    if (!this._isDragging) return;\n\n    const clientX = event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n    const clientY = event instanceof MouseEvent ? event.clientY : event.touches[0].clientY;\n\n    this.currentX = clientX - this.initialX;\n    this.currentY = clientY - this.initialY;\n\n    this.positionX = this.currentX;\n    this.positionY = this.currentY;\n\n    this.onUpdatePosition(this.positionX, this.positionY);\n  };\n\n  public handleDragEnd = () => {\n    this._isDragging = false;\n    this.onDragStateChange(this._isDragging);\n    this.removeDragEventListeners();\n  };\n\n  private addDragEventListeners() {\n    window.addEventListener('mousemove', this.handleDragMove);\n    window.addEventListener('mouseup', this.handleDragEnd);\n    window.addEventListener('touchmove', this.handleDragMove);\n    window.addEventListener('touchend', this.handleDragEnd);\n  }\n\n  private removeDragEventListeners() {\n    window.removeEventListener('mousemove', this.handleDragMove);\n    window.removeEventListener('mouseup', this.handleDragEnd);\n    window.removeEventListener('touchmove', this.handleDragMove);\n    window.removeEventListener('touchend', this.handleDragEnd);\n  }\n}\n","@import '../../../style/mixins/button.scss';\n@import '../../../style/mixins/screen-media';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.mini-player {\n  position: fixed;\n  bottom: 10%;\n  left: 10px;\n  display: flex;\n  flex-direction: column;\n  z-index: 1000;\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: #000000;\n\n  @include for-desktop {\n    bottom: 10px;\n    width: 372px;\n  }\n\n  live-video-player {\n    width: 100%;\n    aspect-ratio: 16 / 9;\n\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      object-fit: cover;\n    }\n  }\n\n  &-bar {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 16px;\n    background-color: var(--color-secondary);\n    width: 100%;\n\n    @include for-desktop {\n      padding: 8px 16px;\n    }\n\n    &-title {\n      font-family: var(--h1-ff);\n      font-size: 16px;\n      text-transform: uppercase;\n      font-weight: bold;\n      color: var(--menu-background);\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 200px;\n      margin: 0;\n    }\n\n    &-button {\n      display: flex;\n      align-items: center;\n\n      button {\n        @include front-button;\n        text-transform: none;\n        font-size: 12px;\n        padding: 8px 16px;\n        color: var(--color-secondary);\n        background-color: #ffffff;\n\n        @include for-desktop {\n          padding: 12px 24px;\n        }\n      }\n    }\n  }\n\n  &-close-button {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    z-index: 1001;\n    background: #ffffff;\n    border: none;\n    border-radius: 4px;\n    width: 28px;\n    height: 28px;\n    display: flex;\n    justify-content: center;\n    cursor: pointer;\n\n    &:hover {\n      background: #c0c0c0;\n    }\n  }\n}\n","import { Component, Prop, Event, Host, EventEmitter, h, State } from '@stencil/core';\nimport { DraggableService } from './services/DraggableService';\n\n@Component({\n  tag: 'mini-player',\n  styleUrl: 'mini-player.scss',\n  shadow: false,\n})\nexport class MiniPlayer {\n  @Prop() videoId: string;\n  @Prop() autoPlay: boolean = false;\n  @Prop() mainTitle: string = 'Mini Player Title';\n  @Prop() buttonText: string = 'Return';\n\n  @State() showMiniPlayer: boolean = true;\n  @State() positionX: number = 0;\n  @State() positionY: number = 0;\n  @State() isDragging: boolean = false;\n\n  @Event({ bubbles: true, eventName: 'on-click-miniplayer-button' })\n  onClickMiniPlayerButton: EventEmitter<void>;\n\n  @Event() componentRendered: EventEmitter<void>;\n\n  private dragDropService: DraggableService;\n\n  componentWillLoad() {\n    this.dragDropService = new DraggableService((x, y) => {\n      this.positionX = x;\n      this.positionY = y;\n    });\n\n    this.dragDropService.onDragStateChange = (isDragging: boolean) => {\n      this.isDragging = isDragging;\n    };\n  }\n\n  private handleDragStart = (event: MouseEvent | TouchEvent) => {\n    this.dragDropService.handleDragStart(event, this.positionX, this.positionY);\n  };\n\n  private handleTouchStart(event: TouchEvent) {\n    const target = event.target as HTMLElement;\n\n    if (target.tagName !== 'BUTTON') return this.handleDragStart(event);\n    event.stopPropagation();\n  }\n\n  private handleCloseMiniPlayer() {\n    this.showMiniPlayer = false;\n  }\n\n  private getMiniPlayerStyle() {\n    return {\n      transform: `translate(${this.positionX}px, ${this.positionY}px)`,\n    };\n  }\n\n  private getMiniPlayerBarStyle() {\n    return {\n      cursor: this.isDragging ? 'grabbing' : 'grab',\n    };\n  }\n\n  componentDidLoad() {\n    this.componentRendered.emit();\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.showMiniPlayer && (\n          <div class=\"mini-player\" style={this.getMiniPlayerStyle()}>\n            <button class=\"mini-player-close-button\" onClick={() => this.handleCloseMiniPlayer()}>\n              <front-icon name=\"close\" />\n            </button>\n            <live-video-player videoId={this.videoId} autoPlay={this.autoPlay} />\n            <div\n              class=\"mini-player-bar\"\n              style={this.getMiniPlayerBarStyle()}\n              onMouseDown={this.handleDragStart}\n              onTouchStart={event => this.handleTouchStart(event)}\n            >\n              <h6 class=\"mini-player-bar-title\">{this.mainTitle}</h6>\n              <div class=\"mini-player-bar-button\">\n                <button onClick={() => this.onClickMiniPlayerButton.emit()}>\n                  {this.buttonText}\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}