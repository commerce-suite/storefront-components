{"version":3,"file":"showcase.spec.js","sourceRoot":"","sources":["../../../../src/components/showcase/test/showcase.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { Showcase } from '../showcase';\nimport { products } from '../mocks/productsMock';\n\njest.mock('../../buy-together/services/front-buy-together.service', () => ({\n  FrontBuyTogetherService: jest.fn().mockImplementation(() => ({\n    getOnlyPivotProducts: jest.fn().mockResolvedValue(products),\n  })),\n}));\n\njest.mock('@splidejs/splide', () => ({\n  __esModule: true,\n  default: jest.fn().mockImplementation(() => ({\n    mount: jest.fn(),\n  })),\n}));\n\ndescribe('showcase-related', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('should render showcase without any props', async () => {\n    const page = await newSpecPage({\n      components: [Showcase],\n      html: `<showcase-related></showcase-related>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <showcase-related></showcase-related>\n    `);\n  });\n\n  it('should render loading state initially', async () => {\n    const page = await newSpecPage({\n      components: [Showcase],\n      html: `<showcase-related buy-together-product-ids=\"[1,2,3]\"></showcase-related>`,\n    });\n\n    page.rootInstance.loading = true;\n    await page.waitForChanges();\n\n    expect(page.root.querySelector('.loading-container')).toBeTruthy();\n    expect(page.root.querySelector('.spinner')).toBeTruthy();\n  });\n\n  it('should render showcase with products after loading', async () => {\n    const page = await newSpecPage({\n      components: [Showcase],\n      html: `<showcase-related buy-together-product-ids=\"[1,2,3]\"></showcase-related>`,\n    });\n\n    page.rootInstance.loading = false;\n    page.rootInstance.products = products;\n    await page.waitForChanges();\n\n    expect(page.root.querySelector('.showcase-related-products')).toBeTruthy();\n    expect(page.root.querySelector('.showcase-related-products-title')).toBeTruthy();\n    expect(page.root.querySelector('.splide-container')).toBeTruthy();\n  });\n\n  it('should render custom showcase title', async () => {\n    const page = await newSpecPage({\n      components: [Showcase],\n      html: `<showcase-related showcase-title=\"Produtos Relacionados\" buy-together-product-ids=\"[1,2,3]\"></showcase-related>`,\n    });\n\n    page.rootInstance.loading = false;\n    page.rootInstance.products = products;\n    await page.waitForChanges();\n\n    const title = page.root.querySelector('.showcase-related-products-title');\n    expect(title.textContent).toBe('Produtos Relacionados');\n  });\n\n  it('should render default showcase title when not provided', async () => {\n    const page = await newSpecPage({\n      components: [Showcase],\n      html: `<showcase-related buy-together-product-ids=\"[1,2,3]\"></showcase-related>`,\n    });\n\n    page.rootInstance.loading = false;\n    page.rootInstance.products = products;\n    await page.waitForChanges();\n\n    const title = page.root.querySelector('.showcase-related-products-title');\n    expect(title.textContent).toBe('Recomendados para vocÃª');\n  });\n\n  it('should render custom button label', async () => {\n    const page = await newSpecPage({\n      components: [Showcase],\n      html: `<showcase-related button-label=\"Adicionar ao Carrinho\" buy-together-product-ids=\"[1,2,3]\"></showcase-related>`,\n    });\n\n    page.rootInstance.loading = false;\n    page.rootInstance.products = products;\n    await page.waitForChanges();\n\n    const button = page.root.querySelector('.buy-button');\n    expect(button.textContent).toBe('Adicionar ao Carrinho');\n  });\n\n  it('should render default button label when not provided', async () => {\n    const page = await newSpecPage({\n      components: [Showcase],\n      html: `<showcase-related buy-together-product-ids=\"[1,2,3]\"></showcase-related>`,\n    });\n\n    page.rootInstance.loading = false;\n    page.rootInstance.products = products;\n    await page.waitForChanges();\n\n    const button = page.root.querySelector('.buy-button');\n    expect(button.textContent).toBe('Comprar');\n  });\n\n  it('should parse product ids from buyTogetherProductIds prop', async () => {\n    const page = await newSpecPage({\n      components: [Showcase],\n      html: `<showcase-related buy-together-product-ids=\"[1,2,3]\"></showcase-related>`,\n    });\n\n    page.rootInstance.parseProductIds();\n    expect(page.rootInstance.productIds).toEqual([1, 2, 3]);\n  });\n\n  it('should emit clickBuyButton event when buy button is clicked', async () => {\n    const page = await newSpecPage({\n      components: [Showcase],\n      html: `<showcase-related buy-together-product-ids=\"[1,2,3]\"></showcase-related>`,\n    });\n\n    page.rootInstance.loading = false;\n    page.rootInstance.products = products;\n    await page.waitForChanges();\n\n    const clickBuyButtonSpy = jest.fn();\n    page.root.addEventListener('clickBuyButton', clickBuyButtonSpy);\n\n    const submitEvent = new Event('submit');\n\n    page.rootInstance.onClickBuyButtonEmit(submitEvent, products[0]);\n\n    expect(clickBuyButtonSpy).toHaveBeenCalledWith(\n      expect.objectContaining({\n        detail: products[0],\n      }),\n    );\n  });\n\n  it('should not render products when there are no products', async () => {\n    const page = await newSpecPage({\n      components: [Showcase],\n      html: `<showcase-related buy-together-product-ids=\"[1,2,3]\"></showcase-related>`,\n    });\n\n    page.rootInstance.loading = false;\n    page.rootInstance.products = [];\n    await page.waitForChanges();\n\n    expect(page.root.querySelector('.showcase-related-products')).toBeFalsy();\n  });\n\n  it('should handle show arrows prop', async () => {\n    const page = await newSpecPage({\n      components: [Showcase],\n      html: `<showcase-related show-arrows=\"false\" buy-together-product-ids=\"[1,2,3]\"></showcase-related>`,\n    });\n\n    page.rootInstance.loading = false;\n    page.rootInstance.products = products;\n    await page.waitForChanges();\n\n    const splideElement = page.root.querySelector('#splide') as HTMLElement;\n    expect(splideElement.style.padding).toBe('30px 0');\n  });\n});\n"]}