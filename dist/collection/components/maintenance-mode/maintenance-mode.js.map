{"version":3,"file":"maintenance-mode.js","sourceRoot":"","sources":["../../../src/components/maintenance-mode/maintenance-mode.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Env, Event, EventEmitter, h, Host, Listen, State } from '@stencil/core';\nimport { IMaintenanceMode } from './maintenance-mode.type';\nimport { defaultContent } from './constants/defaultContent';\nimport { MaintenanceModeService } from './maintenance-mode.service';\nimport { transformMediaUrl } from '../../utils/utils';\n\n@Component({\n  tag: 'maintenance-mode',\n  styleUrl: 'maintenance-mode.scss',\n  shadow: false,\n})\nexport class MaintenanceMode {\n  @State() maintenanceModeData: IMaintenanceMode = defaultContent;\n  @State() maintenanceModeService = new MaintenanceModeService();\n  @State() recaptchaToken: string;\n  @State() isLoading = false;\n  @State() isInitialLoading = true;\n  @State() userMessage: {\n    text: string;\n    type: 'success' | 'error';\n  };\n\n  @Event() componentRendered: EventEmitter<void>;\n\n  private async load() {\n    try {\n      this.maintenanceModeData = await this.maintenanceModeService.getAppContent();\n    } catch (error) {\n      console.error('MaintenanceMode - load', { error });\n    } finally {\n      this.isInitialLoading = false;\n    }\n  }\n\n  private async handleSubmit(event: Event) {\n    event.preventDefault();\n\n    const form = event.target as HTMLFormElement;\n    const formData = new FormData(form);\n\n    formData.append('form_type', 'newsletter_app');\n\n    try {\n      this.isLoading = true;\n      await this.maintenanceModeService.submitNewsletter(formData);\n      this.userMessage = {\n        text: 'E-mail cadastrado',\n        type: 'success',\n      };\n    } catch (error) {\n      console.error('MaintenanceMode - handleSubmit', { error });\n      const defaultMessage = 'Ocorreu um erro, tente novamente mais tarde';\n      const errors = error?.message ? JSON.parse(error.message) : { errors: [defaultMessage] };\n      const [errorMessage] = errors.errors;\n\n      this.userMessage = {\n        text: errorMessage || defaultMessage,\n        type: 'error',\n      };\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  @Listen('tokenReceived')\n  handleTokenReceived(event: CustomEvent<string>) {\n    this.recaptchaToken = event.detail;\n  }\n\n  async componentDidLoad() {\n    await this.load();\n    this.componentRendered.emit();\n  }\n\n  render() {\n    const {\n      page_title: pageTitle,\n      page_content: pageContent,\n      colors,\n      image,\n      newsletter,\n    } = this.maintenanceModeData;\n\n    const {\n      content_background: contentBackground,\n      title,\n      content,\n      button_background: buttonBackground,\n      button_text: buttonText,\n    } = colors;\n\n    document.documentElement.style.setProperty('--maintenance-bg', contentBackground);\n\n    return (\n      <Host\n        style={{\n          '--maintenance-bg': contentBackground,\n          '--maintenance-title': title,\n          '--maintenance-text': content,\n          '--maintenance-button-bg': buttonBackground,\n          '--maintenance-button-color': buttonText,\n        }}\n      >\n        {(this.isLoading || this.isInitialLoading) && (\n          <div class={`loading-container ${this.isInitialLoading ? '-initial-loading' : ''}`}>\n            <span class=\"spinner\" />\n          </div>\n        )}\n\n        {this.maintenanceModeData && !this.isInitialLoading && (\n          <div class=\"maintenance-mode maintenance-mode-container\">\n            <div class=\"maintenance-mode-content\">\n              <div class=\"maintenance-mode-content-label\">\n                <h1>{pageTitle}</h1>\n                <p>{pageContent}</p>\n              </div>\n\n              {image && <img src={transformMediaUrl(image.src)} alt=\"maintenance-mode-image\" />}\n            </div>\n\n            {newsletter && !this.userMessage && (\n              <form\n                onSubmit={e => this.handleSubmit(e)}\n                name=\"newsletter\"\n                class=\"maintenance-mode-form\"\n              >\n                <div class=\"maintenance-mode-form-label\">\n                  <h2>Cadastre-se para receber novidades</h2>\n                </div>\n                <div class=\"maintenance-mode-form-content\">\n                  <div class=\"maintenance-mode-form-content-input\">\n                    <input type=\"text\" name=\"name\" placeholder=\"Seu nome\" required />\n                    <input type=\"email\" name=\"email\" placeholder=\"Seu email\" required />\n                  </div>\n\n                  <google-recaptcha siteKey={Env.GOOGLE_RECAPTCHA_SITE_KEY} />\n\n                  <button\n                    class=\"maintenance-mode-form-content-button\"\n                    type=\"submit\"\n                    disabled={!this.recaptchaToken}\n                  >\n                    Quero me inscrever\n                  </button>\n                </div>\n              </form>\n            )}\n\n            {this.userMessage && (\n              <div\n                class={`maintenance-mode-content-message maintenance-mode-content-message-${this.userMessage.type}`}\n              >\n                <span>{this.userMessage.text}</span>\n              </div>\n            )}\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"]}