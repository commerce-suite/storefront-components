{"version":3,"file":"launch-mode.js","sourceRoot":"","sources":["../../../src/components/launch-mode/launch-mode.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Event, EventEmitter, h, Host, State, getAssetPath } from '@stencil/core';\nimport { LaunchModeService } from './launch-mode.service';\nimport { ILaunchMode } from './lauch-mode.type';\nimport { defaultContent } from './constants/defaultContent';\nimport { ERROR_MESSAGES, ErrorCode } from './constants/errorMessages';\n\n@Component({\n  tag: 'launch-mode',\n  styleUrl: 'launch-mode.scss',\n  shadow: false,\n})\nexport class LaunchMode {\n  @State() launchModeData: ILaunchMode = defaultContent;\n  @State() launchModeService = new LaunchModeService();\n  @State() isLoading = false;\n  @State() isInitialLoading = true;\n  @State() userMessage: {\n    text: string;\n  };\n\n  @State() passwordInput = '';\n  @State() showPassword = false;\n\n  @Event() componentRendered: EventEmitter<void>;\n\n  private async load() {\n    try {\n      this.launchModeData = await this.launchModeService.getAppContent();\n    } catch (error) {\n      console.error('LaunchMode - load', { error });\n    } finally {\n      this.isInitialLoading = false;\n    }\n  }\n\n  private async handleSubmit(event: Event) {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append('password', this.passwordInput);\n    formData.append('form_type', 'launch_mode');\n\n    try {\n      this.isLoading = true;\n      await this.launchModeService.validatePassword(formData);\n\n      const baseUrl = window.dooca.base_url;\n      window.location.href = baseUrl;\n    } catch (error) {\n      console.error('LaunchMode - handleSubmit', { error });\n\n      const errorCode = this.parseErrorCode(error);\n      const errorMessage = ERROR_MESSAGES[errorCode] || ERROR_MESSAGES.default;\n\n      this.userMessage = {\n        text: errorMessage,\n      };\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private parseErrorCode(error: any): ErrorCode | null {\n    try {\n      const parsed = JSON.parse(error?.message || '{}');\n      return parsed.code || null;\n    } catch {\n      return null;\n    }\n  }\n\n  private handlePasswordChange(event: Event) {\n    const target = event.target as HTMLInputElement;\n    this.passwordInput = target.value;\n\n    if (this.userMessage) this.userMessage = null;\n  }\n\n  private togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async componentDidLoad() {\n    await this.load();\n    this.componentRendered.emit();\n  }\n\n  render() {\n    const {\n      title,\n      caption,\n      color_title: colorTitle,\n      color_caption: colorCaption,\n      color_button: colorButton,\n    } = this.launchModeData;\n\n    return (\n      <Host\n        style={{\n          '--launch-title': colorTitle,\n          '--launch-caption': colorCaption,\n          '--launch-button-bg': colorButton,\n        }}\n      >\n        {(this.isLoading || this.isInitialLoading) && (\n          <div class={`loading-container ${this.isInitialLoading ? '-initial-loading' : ''}`}>\n            <span class=\"spinner\" />\n          </div>\n        )}\n\n        {this.launchModeData && !this.isInitialLoading && (\n          <div class=\"launch-mode launch-mode-container\">\n            <div class=\"launch-mode-content\">\n              <div class=\"launch-mode-content-label\">\n                <h1 class=\"h1\">{title}</h1>\n                <div innerHTML={caption} />\n              </div>\n\n              <form onSubmit={e => this.handleSubmit(e)} class=\"launch-mode-form\">\n                <div class=\"launch-mode-form-content\">\n                  <div class=\"launch-mode-form-content-input\">\n                    <input\n                      name=\"password\"\n                      type={this.showPassword ? 'text' : 'password'}\n                      placeholder=\"Digite sua senha\"\n                      value={this.passwordInput}\n                      onInput={e => this.handlePasswordChange(e)}\n                      required\n                    />\n                    <button\n                      type=\"button\"\n                      class=\"password-toggle-btn\"\n                      onClick={() => this.togglePasswordVisibility()}\n                      aria-label={this.showPassword ? 'Ocultar senha' : 'Mostrar senha'}\n                    >\n                      <img\n                        src={getAssetPath(\n                          this.showPassword\n                            ? './assets/icons/eye-off.svg'\n                            : './assets/icons/eye.svg',\n                        )}\n                        alt={this.showPassword ? 'Ocultar senha' : 'Mostrar senha'}\n                      />\n                    </button>\n                  </div>\n\n                  <button\n                    class=\"launch-mode-form-content-button\"\n                    type=\"submit\"\n                    disabled={this.isLoading || !this.passwordInput.trim()}\n                  >\n                    {this.isLoading ? 'Destravando...' : 'Destravar'}\n                  </button>\n                </div>\n              </form>\n\n              {this.userMessage && (\n                <div class={`launch-mode-content-message launch-mode-content-message-error`}>\n                  <span>{this.userMessage.text}</span>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"]}