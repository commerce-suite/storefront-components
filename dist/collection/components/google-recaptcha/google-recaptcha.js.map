{"version":3,"file":"google-recaptcha.js","sourceRoot":"","sources":["../../../src/components/google-recaptcha/google-recaptcha.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAgB,CAAC,EAAE,MAAM,eAAe,CAAC;AAO/E,MAAM,OAAO,eAAe;;QAKlB,iBAAY,GAAG,KAAK,CAAC;;2BAHE,aAAa,IAAI,CAAC,GAAG,EAAE,EAAE;;IAKxD,gBAAgB;QACd,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEO,mBAAmB;QACzB,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC;YACtB,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,OAAO;QACT,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YACvB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAChD,MAAM,CAAC,GAAG,GAAG,gFAAgF,CAAC;YAC9F,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;YACpB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;YAEpB,MAAM,CAAC,eAAe,GAAG,GAAG,EAAE;gBAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,CAAC,CAAC;YAEF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACpC,CAAC;IACH,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,MAAM,CAAC,UAAU;YAAE,OAAO;QAE/B,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE;YACzC,SAAS,EAAE,IAAI,CAAC,OAAO;YACvB,UAAU,EAAE,CAAC,KAAa,EAAE,EAAE;gBAC5B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjC,CAAC;YACD,gBAAgB,EAAE,GAAG,EAAE;gBACrB,OAAO,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;YAChD,CAAC;YACD,kBAAkB,EAAE,GAAG,EAAE;gBACvB,OAAO,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;YAC/C,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,OAAO,4DAAK,KAAK,EAAC,aAAa,EAAC,EAAE,EAAE,IAAI,CAAC,WAAW,GAAI,CAAC;IAC3D,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, State, Event, EventEmitter, h } from '@stencil/core';\n\n@Component({\n  tag: 'google-recaptcha',\n  styleUrl: 'google-recaptcha.scss',\n  shadow: false,\n})\nexport class GoogleRecaptcha {\n  @Prop() siteKey: string;\n  @State() recaptchaId: string = `recaptcha-${Date.now()}`;\n  @Event() tokenReceived: EventEmitter<string>;\n\n  private scriptLoaded = false;\n\n  componentDidLoad() {\n    this.loadRecaptchaScript();\n  }\n\n  private loadRecaptchaScript() {\n    if (window.grecaptcha) {\n      this.renderRecaptcha();\n      return;\n    }\n\n    if (!this.scriptLoaded) {\n      const script = document.createElement('script');\n      script.src = 'https://www.google.com/recaptcha/api.js?onload=onRecaptchaLoad&render=explicit';\n      script.async = true;\n      script.defer = true;\n\n      window.onRecaptchaLoad = () => {\n        this.scriptLoaded = true;\n        this.renderRecaptcha();\n      };\n\n      document.body.appendChild(script);\n    }\n  }\n\n  private renderRecaptcha() {\n    if (!window.grecaptcha) return;\n\n    window.grecaptcha.render(this.recaptchaId, {\n      'sitekey': this.siteKey,\n      'callback': (token: string) => {\n        this.tokenReceived.emit(token);\n      },\n      'error-callback': () => {\n        console.error('Erro ao carregar o reCAPTCHA');\n      },\n      'expired-callback': () => {\n        console.warn('O token do reCAPTCHA expirou');\n      },\n    });\n  }\n\n  render() {\n    return <div class=\"g-recaptcha\" id={this.recaptchaId} />;\n  }\n}\n"]}