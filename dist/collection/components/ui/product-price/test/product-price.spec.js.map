{"version":3,"file":"product-price.spec.js","sourceRoot":"","sources":["../../../../../src/components/ui/product-price/test/product-price.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { ProductPrice } from '../product-price';\n\ndescribe('product-card', () => {\n  it('should render without payment options', async () => {\n    const page = await newSpecPage({\n      components: [ProductPrice],\n      template: () => (\n        <product-price basePrice={{ price: 999.99, priceCompare: 1299.99 }}></product-price>\n      ),\n    });\n    expect(page.root).toEqualHtml(`\n      <product-price>\n        <div class=\"product-price-container\">\n          <product-price-simple price=\"999.99\" pricecompare=\"1299.99\"></product-price-simple>\n        </div>\n      </product-price>\n    `);\n  });\n\n  it('should render with options', async () => {\n    const page = await newSpecPage({\n      components: [ProductPrice],\n      template: () => (\n        <product-price\n          paymentOptions={[\n            {\n              type: 'creditCard',\n              price: 999.99,\n              priceCompare: 1199.99,\n              parcels: 10,\n              parcelPrice: 99.99,\n              hasInterest: false,\n            },\n            { type: 'billet', price: 999.99 },\n            { type: 'pix', price: 999.99 },\n          ]}\n        />\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <product-price>\n        <div class=\"product-price-container\">\n          <product-price-credit-card parcelprice=\"99.99\" parcels=\"10\" price=\"999.99\" pricecompare=\"1199.99\"></product-price-credit-card>\n          <product-price-billet price=\"999.99\"></product-price-billet>\n          <product-price-pix price=\"999.99\"></product-price-pix>\n        </div>\n      </product-price>\n      `);\n  });\n\n  it('should render with only pix', async () => {\n    const page = await newSpecPage({\n      components: [ProductPrice],\n      template: () => (\n        <product-price paymentOptions={[{ type: 'pix', price: 999.99, priceCompare: 1199.99 }]} />\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <product-price>\n        <div class=\"product-price-container\">\n          <product-price-pix price=\"999.99\" pricecompare=\"1199.99\"></product-price-pix>\n        </div>\n      </product-price>\n    `);\n  });\n\n  it('should render with only billet', async () => {\n    const page = await newSpecPage({\n      components: [ProductPrice],\n      template: () => (\n        <product-price\n          paymentOptions={[{ type: 'billet', price: 999.99, priceCompare: 1199.99 }]}\n        />\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <product-price>\n        <div class=\"product-price-container\">\n          <product-price-billet price=\"999.99\" pricecompare=\"1199.99\"></product-price-billet>\n        </div>\n      </product-price>\n    `);\n  });\n\n  it('should render with only simple', async () => {\n    const page = await newSpecPage({\n      components: [ProductPrice],\n      template: () => (\n        <product-price\n          paymentOptions={[{ type: 'simple', price: 999.99, priceCompare: 1199.99 }]}\n        />\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <product-price>\n        <div class=\"product-price-container\">\n          <product-price-simple price=\"999.99\" pricecompare=\"1199.99\"></product-price-simple>\n        </div>\n      </product-price>\n    `);\n  });\n\n  it('should render with only creditCard', async () => {\n    const page = await newSpecPage({\n      components: [ProductPrice],\n      template: () => (\n        <product-price\n          paymentOptions={[\n            {\n              type: 'creditCard',\n              price: 999.99,\n              priceCompare: 1199.99,\n              parcels: 10,\n              parcelPrice: 99.99,\n              hasInterest: false,\n            },\n          ]}\n        />\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <product-price>\n        <div class=\"product-price-container\">\n          <product-price-credit-card parcelprice=\"99.99\" parcels=\"10\" price=\"999.99\" pricecompare=\"1199.99\"></product-price-credit-card>\n        </div>\n      </product-price>\n    `);\n  });\n});\n"]}