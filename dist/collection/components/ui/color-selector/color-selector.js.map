{"version":3,"file":"color-selector.js","sourceRoot":"","sources":["../../../../src/components/ui/color-selector/color-selector.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAQ9E,MAAM,OAAO,aAAa;;sBACG,EAAE;;;IAKrB,aAAa,CAAC,KAAa;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAEO,aAAa,CAAC,KAAa;QACjC,OAAO,KAAK,CAAC,KAAK;YAChB,CAAC,CAAC;gBACE,eAAe,EAAE,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG;gBAC1C,cAAc,EAAE,OAAO;gBACvB,kBAAkB,EAAE,QAAQ;aAC7B;YACH,CAAC,CAAC;gBACE,eAAe,EAAE,KAAK,CAAC,WAAW;aACnC,CAAC;IACR,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACH,4DAAK,KAAK,EAAC,gBAAgB,IACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CACxB,cACE,GAAG,EAAE,KAAK,CAAC,EAAE,EACb,KAAK,EAAE;oBACL,cAAc,EAAE,IAAI;oBACpB,QAAQ,EAAE,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,EAAE;iBACvC,EACD,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,gBAC5B,KAAK,CAAC,IAAI,EACtB,KAAK,EAAE,KAAK,CAAC,IAAI;gBAEjB,YAAM,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAS,CAC1D,CACV,CAAC,CACE,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\nimport { IColor } from '../product-card/product-card.type';\n\n@Component({\n  tag: 'color-selector',\n  styleUrl: 'color-selector.scss',\n  shadow: false,\n})\nexport class ColorSelector {\n  @Prop() colors: IColor[] = [];\n  @Prop() selectedId?: number;\n\n  @Event() colorSelected: EventEmitter<IColor>;\n\n  private onSelectColor(color: IColor) {\n    this.colorSelected.emit(color);\n  }\n\n  private getColorStyle(color: IColor) {\n    return color.image\n      ? {\n          backgroundImage: `url(${color.image.src})`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n        }\n      : {\n          backgroundColor: color.hexadecimal,\n        };\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"color-selector\">\n          {this.colors.map(color => (\n            <button\n              key={color.id}\n              class={{\n                'color-option': true,\n                'active': this.selectedId === color.id,\n              }}\n              onClick={() => this.onSelectColor(color)}\n              aria-label={color.name}\n              title={color.name}\n            >\n              <span class=\"color-dot\" style={this.getColorStyle(color)}></span>\n            </button>\n          ))}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}