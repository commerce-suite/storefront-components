{"version":3,"file":"front-image.js","sourceRoot":"","sources":["../../../../src/components/ui/front-image/front-image.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAQvD,MAAM,OAAO,UAAU;;;;;4BAKG,IAAI;;IAEpB,oBAAoB;QAC1B,MAAM,UAAU,GAAG;YACjB,aAAa,EAAE,IAAI,CAAC,YAAY;SACjC,CAAC;QACF,OAAO,mBAAmB,eAAe,CAAC,UAAU,CAAC,EAAE,CAAC;IAC1D,CAAC;IAED,6BAA6B;IAC7B,wEAAwE;IACxE,uBAAuB;IACvB,iCAAiC;IACjC,aAAa;IACb,IAAI;IAEI,eAAe;QACrB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAGD,cAAc;QACZ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACH,+DAAQ,KAAK,EAAE,IAAI,CAAC,oBAAoB,EAAE;gBACxC,4DACE,GAAG,EAAE,IAAI,CAAC,QAAQ,EAClB,GAAG,EAAE,IAAI,CAAC,OAAO,IAAI,QAAQ,EAC7B,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,GACpC;gBACD,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,qEAAa,IAAI,CAAC,UAAU,CAAc,CACzD,CACJ,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { getClassByProps } from '../../../utils/utils';\n\n@Component({\n  tag: 'front-image',\n  styleUrl: 'front-image.scss',\n  scoped: false,\n  shadow: false,\n})\nexport class FrontImage {\n  @Prop({ mutable: true }) imageSrc: string;\n  @Prop({ mutable: true }) textAlt: string;\n  @Prop({ mutable: true }) figCaption: string;\n\n  @State() isSrcLoading = true;\n\n  private getImageClassByProps() {\n    const classProps = {\n      '-is-loading': this.isSrcLoading,\n    };\n    return `image-container ${getClassByProps(classProps)}`;\n  }\n\n  // private onSrcLoadError() {\n  //   this.imageSrc = getAssetPath('./assets/images/image-fallback.png');\n  //   setTimeout(() => {\n  //     this.isSrcLoading = false;\n  //   }, 500);\n  // }\n\n  private onSrcLoadFinish() {\n    setTimeout(() => {\n      this.isSrcLoading = false;\n    }, 500);\n  }\n\n  @Watch('imageSrc')\n  changeImageSrc() {\n    this.isSrcLoading = true;\n  }\n\n  render() {\n    return (\n      <Host>\n        <figure class={this.getImageClassByProps()}>\n          <img\n            src={this.imageSrc}\n            alt={this.textAlt || 'Imagem'}\n            onLoad={() => this.onSrcLoadFinish()}\n          />\n          {!!this.figCaption && <figcaption>{this.figCaption}</figcaption>}\n        </figure>\n      </Host>\n    );\n  }\n}\n"]}