{"version":3,"file":"info-modal.js","sourceRoot":"","sources":["../../../../src/components/ui/info-modal/info-modal.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAgB,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAO9E,MAAM,OAAO,SAAS;;0BACS,kBAAkB;gCAE7C,8EAA8E;2BAEjD,KAAK;iCACA,gBAAgB;mCACd,eAAe;wBACL,QAAQ;;IAUhD,gBAAgB;QACtB,MAAM,WAAW,GAA8B;YAC7C,GAAG,EAAE,MAAM;YACX,MAAM,EAAE,SAAS;SAClB,CAAC;QAEF,OAAO,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,CAAC;IACjD,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAChC,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACH,4DACE,KAAK,EAAE,cAAc,IAAI,CAAC,gBAAgB,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE;gBAEzF,4DAAK,KAAK,EAAC,mBAAmB;oBAC5B,2DAAI,KAAK,EAAC,yBAAyB,IAAE,IAAI,CAAC,UAAU,CAAM;oBAC1D,0DAAG,KAAK,EAAC,+BAA+B,IAAE,IAAI,CAAC,gBAAgB,CAAK,CAChE;gBACL,CAAC,IAAI,CAAC,WAAW,IAAI,CACpB,4DAAK,KAAK,EAAC,oBAAoB;oBAC7B,+DACE,KAAK,EAAC,4BAA4B,EAClC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAE9C,IAAI,CAAC,iBAAiB,CAChB;oBACT,+DACE,KAAK,EAAC,8BAA8B,EACpC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,IAEhD,IAAI,CAAC,mBAAmB,CAClB,CACL,CACP,CACG,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Event, Host, EventEmitter, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'info-modal',\n  styleUrl: 'info-modal.scss',\n  shadow: false,\n})\nexport class InfoModal {\n  @Prop() modalTitle: string = 'Estamos ao vivo!';\n  @Prop() modalDescription: string =\n    'Venha conferir nossa live cheia novidades e promoções imperdíveis para você!';\n\n  @Prop() hideButtons: boolean = false;\n  @Prop() primaryButtonText: string = 'Assistir agora';\n  @Prop() secondaryButtonText: string = 'Não, obrigado';\n  @Prop() position: 'bottom' | 'center' | 'top' = 'bottom';\n\n  @Event() componentRendered: EventEmitter<void>;\n\n  @Event({ bubbles: true, eventName: 'on-click-primary-button' })\n  onClickPrimaryButton: EventEmitter<void>;\n\n  @Event({ bubbles: true, eventName: 'on-click-secondary-button' })\n  onClickSecondaryButton: EventEmitter<void>;\n\n  private getModalPosition() {\n    const positionMap: { [key: string]: string } = {\n      top: '-top',\n      center: '-center',\n    };\n\n    return positionMap[this.position] || '-bottom';\n  }\n\n  componentDidLoad() {\n    this.componentRendered.emit();\n  }\n\n  render() {\n    return (\n      <Host>\n        <div\n          class={`info-modal ${this.getModalPosition()} ${this.hideButtons ? '-hide-buttons' : ''}`}\n        >\n          <div class=\"info-modal-header\">\n            <h2 class=\"info-modal-header-title\">{this.modalTitle}</h2>\n            <p class=\"info-modal-header-description\">{this.modalDescription}</p>\n          </div>\n          {!this.hideButtons && (\n            <div class=\"info-modal-buttons\">\n              <button\n                class=\"info-modal-buttons-primary\"\n                onClick={() => this.onClickPrimaryButton.emit()}\n              >\n                {this.primaryButtonText}\n              </button>\n              <button\n                class=\"info-modal-buttons-secondary\"\n                onClick={() => this.onClickSecondaryButton.emit()}\n              >\n                {this.secondaryButtonText}\n              </button>\n            </div>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}