{"version":3,"file":"DraggableService.js","sourceRoot":"","sources":["../../../../../src/components/ui/mini-player/services/DraggableService.ts"],"names":[],"mappings":"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","sourcesContent":["export class DraggableService {\n  private _isDragging: boolean = false;\n  private initialX: number = 0;\n  private initialY: number = 0;\n  private currentX: number = 0;\n  private currentY: number = 0;\n  private positionX: number = 0;\n  private positionY: number = 0;\n\n  public onDragStateChange: (isDragging: boolean) => void = () => {};\n  public onUpdatePosition: (x: number, y: number) => void;\n\n  constructor(onUpdatePosition: (x: number, y: number) => void) {\n    this.onUpdatePosition = onUpdatePosition;\n  }\n\n  public get isDragging() {\n    return this._isDragging;\n  }\n\n  public handleDragStart(event: MouseEvent | TouchEvent, positionX: number, positionY: number) {\n    event.preventDefault();\n    this._isDragging = true;\n\n    this.onDragStateChange(this._isDragging);\n\n    const clientX = event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n    const clientY = event instanceof MouseEvent ? event.clientY : event.touches[0].clientY;\n\n    this.initialX = clientX - positionX;\n    this.initialY = clientY - positionY;\n\n    this.positionX = positionX;\n    this.positionY = positionY;\n\n    this.addDragEventListeners();\n  }\n\n  public handleDragMove = (event: MouseEvent | TouchEvent) => {\n    if (!this._isDragging) return;\n\n    const clientX = event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n    const clientY = event instanceof MouseEvent ? event.clientY : event.touches[0].clientY;\n\n    this.currentX = clientX - this.initialX;\n    this.currentY = clientY - this.initialY;\n\n    this.positionX = this.currentX;\n    this.positionY = this.currentY;\n\n    this.onUpdatePosition(this.positionX, this.positionY);\n  };\n\n  public handleDragEnd = () => {\n    this._isDragging = false;\n    this.onDragStateChange(this._isDragging);\n    this.removeDragEventListeners();\n  };\n\n  private addDragEventListeners() {\n    window.addEventListener('mousemove', this.handleDragMove);\n    window.addEventListener('mouseup', this.handleDragEnd);\n    window.addEventListener('touchmove', this.handleDragMove);\n    window.addEventListener('touchend', this.handleDragEnd);\n  }\n\n  private removeDragEventListeners() {\n    window.removeEventListener('mousemove', this.handleDragMove);\n    window.removeEventListener('mouseup', this.handleDragEnd);\n    window.removeEventListener('touchmove', this.handleDragMove);\n    window.removeEventListener('touchend', this.handleDragEnd);\n  }\n}\n"]}