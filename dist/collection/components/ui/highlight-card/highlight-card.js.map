{"version":3,"file":"highlight-card.js","sourceRoot":"","sources":["../../../../src/components/ui/highlight-card/highlight-card.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Event,\n  EventEmitter,\n  h,\n  Prop,\n  State,\n  Host,\n  Watch,\n  getAssetPath,\n} from '@stencil/core';\nimport { IHighlightCardItem, IProductItem } from './highlight-card.type';\nimport { IColor, IProductCard } from '../product-card/product-card.type';\n\n@Component({\n  tag: 'highlight-card',\n  styleUrl: 'highlight-card.scss',\n  shadow: false,\n})\nexport class HighlightCard {\n  @Prop() items: IHighlightCardItem[] = [];\n\n  @State() highlightedItems: IHighlightCardItem[] = [];\n  @State() nonHighlightedItems: IHighlightCardItem[] = [];\n  @State() selectedColorByProductId: Record<number, number> = {};\n\n  @Event() addItem: EventEmitter<IHighlightCardItem>;\n  @Event() componentRendered: EventEmitter<void>;\n\n  private updateProductItem(currentItem: IHighlightCardItem, updatedProduct: IProductCard) {\n    const targetList = currentItem.highlight ? this.highlightedItems : this.nonHighlightedItems;\n\n    const updatedList = targetList.map(item =>\n      item.type === 'product' && item.id === currentItem.id ? { ...item, ...updatedProduct } : item,\n    );\n\n    if (currentItem.highlight) this.highlightedItems = [...updatedList];\n    else this.nonHighlightedItems = [...updatedList];\n  }\n\n  private handleColorSelected(currentItem: IProductItem, color: IColor) {\n    const productId = currentItem.id;\n\n    this.selectedColorByProductId = {\n      ...this.selectedColorByProductId,\n      [productId]: color.id,\n    };\n\n    const baseName = currentItem.name.split(' - ')[0] ?? currentItem.name;\n    const baseSlug = currentItem.slug.split('/')[0] ?? currentItem.slug;\n\n    const updatedProduct: IProductCard = {\n      ...currentItem,\n      id: productId,\n      name: `${baseName} - ${color.name}`,\n      slug: `${baseSlug}/${color.slug}`,\n      gridId: `${productId}-${color.id}`,\n      image: color.productImage?.src ? { src: color.productImage.src } : null,\n      price: color.price,\n      balance: color.balance,\n      priceBase: color.priceCompare,\n    };\n\n    this.updateProductItem(currentItem, updatedProduct);\n  }\n\n  private renderItem(item: any, isHighlighted: boolean) {\n    if (!item.show) return null;\n\n    return (\n      <div class={`highlight-card-item ${isHighlighted ? 'highlight-card-item-highlighted' : ''}`}>\n        {item.type === 'message' && (\n          <div class=\"highlight-card-message\">\n            <h4 class=\"highlight-card-message-title\">{item.title}</h4>\n            <p class=\"highlight-card-message-content\">{item.content}</p>\n          </div>\n        )}\n        {item.type === 'product' && (\n          <div class=\"highlight-card-product\">\n            <product-card\n              custom-class=\"highlight-custom-style\"\n              product={item}\n              basePrice={{ price: item.price, priceCompare: item.priceBase }}\n              showStartingFrom={item.showStartingFrom}\n              inline\n            >\n              {item.colors && (\n                <color-selector\n                  colors={item.colors}\n                  selectedId={this.selectedColorByProductId[item.id]}\n                  onColorSelected={e => this.handleColorSelected(item, e.detail)}\n                />\n              )}\n            </product-card>\n            <div class=\"highlight-card-product-cart-icon\" onClick={() => this.addItem.emit(item)}>\n              <img src={getAssetPath('./assets/icons/add-to-cart.svg')} alt=\"add_to_cart_icon\" />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  filterItems(items: IHighlightCardItem[]) {\n    const visibleItems = items.filter(item => item.show);\n    this.highlightedItems = visibleItems.filter(item => item.highlight);\n    this.nonHighlightedItems = visibleItems.filter(item => !item.highlight);\n\n    const selectedMap: Record<number, number> = {};\n\n    const allProducts = [...this.highlightedItems, ...this.nonHighlightedItems];\n\n    allProducts.forEach(item => {\n      if (item.type === 'product') {\n        const firstColor = item.colors?.[0];\n        if (firstColor) {\n          selectedMap[item.id] = firstColor.id;\n          this.handleColorSelected(item, firstColor);\n        }\n      }\n    });\n\n    this.selectedColorByProductId = selectedMap;\n  }\n\n  componentDidLoad() {\n    this.componentRendered.emit();\n  }\n\n  componentWillLoad() {\n    this.filterItems(this.items);\n  }\n\n  @Watch('items')\n  handleItemsChange(newItems: IHighlightCardItem[]) {\n    this.filterItems(newItems);\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"highlight-card\">\n          {this.highlightedItems.length > 0 && (\n            <div class=\"highlight-card-container\">\n              <div class=\"highlight-card-header\">\n                <span class=\"highlight-card-header-title\">Destaque</span>\n              </div>\n              {this.highlightedItems.map((item, index) => (\n                <div>\n                  {this.renderItem(item, true)}\n                  {index < this.highlightedItems.length - 1 && (\n                    <div class=\"highlight-card-separator\" />\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n          {this.nonHighlightedItems.map(item => this.renderItem(item, false))}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}