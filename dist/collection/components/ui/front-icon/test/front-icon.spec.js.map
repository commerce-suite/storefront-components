{"version":3,"file":"front-icon.spec.js","sourceRoot":"","sources":["../../../../../src/components/ui/front-icon/test/front-icon.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAE1C,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE,2BAA2B;SAClC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QACzD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE,wCAAwC;SAC/C,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QACzD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE,uCAAuC;SAC9C,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE,2CAA2C;SAClD,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAC9D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE,mEAAmE;SAC1E,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QACzD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE,gDAAgD;SACvD,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { FrontIcon } from '../front-icon';\n\ndescribe('front-icon', () => {\n  it('should render front-icon with default props', async () => {\n    const page = await newSpecPage({\n      components: [FrontIcon],\n      html: `<front-icon></front-icon>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <front-icon>\n        <span class=\"material-icons\" style=\"color: #000; font-size: 24px;\">\n          home\n        </span>\n      </front-icon>\n    `);\n  });\n\n  it('should render front-icon with custom name', async () => {\n    const page = await newSpecPage({\n      components: [FrontIcon],\n      html: `<front-icon name=\"close\"></front-icon>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <front-icon name=\"close\">\n        <span class=\"material-icons\" style=\"color: #000; font-size: 24px;\">\n          close\n        </span>\n      </front-icon>\n    `);\n  });\n\n  it('should render front-icon with custom size', async () => {\n    const page = await newSpecPage({\n      components: [FrontIcon],\n      html: `<front-icon size=\"32px\"></front-icon>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <front-icon size=\"32px\">\n        <span class=\"material-icons\" style=\"color: #000; font-size: 32px;\">\n          home\n        </span>\n      </front-icon>\n    `);\n  });\n\n  it('should render front-icon with custom color', async () => {\n    const page = await newSpecPage({\n      components: [FrontIcon],\n      html: `<front-icon color=\"#FF0000\"></front-icon>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <front-icon color=\"#FF0000\">\n        <span class=\"material-icons\" style=\"color: #FF0000; font-size: 24px;\">\n          home\n        </span>\n      </front-icon>\n    `);\n  });\n\n  it('should render front-icon with all custom props', async () => {\n    const page = await newSpecPage({\n      components: [FrontIcon],\n      html: `<front-icon name=\"star\" size=\"16px\" color=\"#FFD700\"></front-icon>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <front-icon name=\"star\" size=\"16px\" color=\"#FFD700\">\n        <span class=\"material-icons\" style=\"color: #FFD700; font-size: 16px;\">\n          star\n        </span>\n      </front-icon>\n    `);\n  });\n\n  it('should handle icon names with underscores', async () => {\n    const page = await newSpecPage({\n      components: [FrontIcon],\n      html: `<front-icon name=\"shopping_cart\"></front-icon>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <front-icon name=\"shopping_cart\">\n        <span class=\"material-icons\" style=\"color: #000; font-size: 24px;\">\n          shopping_cart\n        </span>\n      </front-icon>\n    `);\n  });\n});\n"]}