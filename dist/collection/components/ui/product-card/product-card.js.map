{"version":3,"file":"product-card.js","sourceRoot":"","sources":["../../../../src/components/ui/product-card/product-card.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAEzD,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AASvD,MAAM,OAAO,WAAW;;sBACI,KAAK;2BACD,EAAE;;;8BAGW,EAAE;;IAE7C,kBAAkB,CAAC,SAAiB;QAClC,MAAM,YAAY,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;QAChD,OAAO,GAAG,SAAS,IAAI,eAAe,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;IAC7E,CAAC;IAED,MAAM;;QACJ,OAAO,CACL,EAAC,IAAI;YACH,4DAAK,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;gBACtD,oEACE,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,EACvC,QAAQ,EAAE,MAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,KAAK,0CAAE,GAAG,EAClC,OAAO,EAAE,CAAA,MAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,KAAK,0CAAE,GAAG,KAAI,mBAAmB,GACxD;gBACF,4DAAK,KAAK,EAAC,MAAM;oBACf,6DAAM,KAAK,EAAC,OAAO,IAAE,MAAA,IAAI,CAAC,OAAO,0CAAE,IAAI,CAAQ;oBAC/C,sEAAe,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,cAAc,EAAE,IAAI,CAAC,cAAc,GAAI,CAC7E,CACF,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, Prop, h } from '@stencil/core';\nimport { IProductCard } from './product-card.type';\nimport { getClassByProps } from '../../../utils/utils';\nimport { BasePrice, PaymentOption } from '../product-price/product-price.type';\n\n@Component({\n  tag: 'product-card',\n  styleUrl: 'product-card.scss',\n  shadow: false,\n  scoped: false,\n})\nexport class ProductCard {\n  @Prop() inline: boolean = false;\n  @Prop() customClass: string = '';\n  @Prop({ mutable: true }) product: IProductCard;\n  @Prop() basePrice: BasePrice;\n  @Prop() paymentOptions?: PaymentOption[] = [];\n\n  getClassWithInline(className: string) {\n    const prosForClass = { '-inline': this.inline };\n    return `${className} ${getClassByProps(prosForClass)} ${this.customClass}`;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={this.getClassWithInline('product-container')}>\n          <front-image\n            class={this.getClassWithInline('image')}\n            imageSrc={this.product?.image?.src}\n            textAlt={this.product?.image?.alt || 'Imagem do produto'}\n          />\n          <div class=\"info\">\n            <span class=\"title\">{this.product?.name}</span>\n            <product-price basePrice={this.basePrice} paymentOptions={this.paymentOptions} />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}