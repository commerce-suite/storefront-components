{"version":3,"file":"product-card.spec.js","sourceRoot":"","sources":["../../../../../src/components/ui/product-card/test/product-card.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAClC,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;YACzB,QAAQ,EAAE,GAAG,EAAE,CAAC,oBAAc,OAAO,EAAE,OAAO,GAAiB;SAChE,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;+CAGa,OAAO,CAAC,KAAK,CAAC,GAAG;;;;;;;;;KAS3D,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QACnC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;YACzB,QAAQ,EAAE,GAAG,EAAE,CAAC,oBAAc,MAAM,QAAC,OAAO,EAAE,OAAO,GAAiB;SACvE,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;uDAGqB,OAAO,CAAC,KAAK,CAAC,GAAG;;;;;;;;;KASnE,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { ProductCard } from '../product-card';\nimport { product } from '../mocks/product-card.mock';\n\ndescribe('product-card', () => {\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [ProductCard],\n      template: () => <product-card product={product}></product-card>,\n    });\n    expect(page.root).toEqualHtml(`\n    <product-card>\n      <div class=\"product-container\">\n        <front-image class=\"image\" imagesrc=\"${product.image.src}\" textalt=\"Imagem do produto\"></front-image>\n        <div class=\"info\">\n          <span class=\"title\">\n            Bolsa Essencial\n          </span>\n          <product-price></product-price>\n        </div>\n      </div>\n     </product-card>\n    `);\n  });\n\n  it('renders with inline', async () => {\n    const page = await newSpecPage({\n      components: [ProductCard],\n      template: () => <product-card inline product={product}></product-card>,\n    });\n    expect(page.root).toEqualHtml(`\n    <product-card>\n      <div class=\"-inline  product-container\">\n        <front-image class=\"-inline image\" imagesrc=\"${product.image.src}\" textalt=\"Imagem do produto\"></front-image>\n        <div class=\"info\">\n          <span class=\"title\">\n            Bolsa Essencial\n          </span>\n          <product-price></product-price>\n        </div>\n      </div>\n     </product-card>\n    `);\n  });\n});\n"]}