{"version":3,"file":"front-buy-together-response.spec.js","sourceRoot":"","sources":["../../../../../src/components/buy-together/services/test/front-buy-together-response.spec.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,MAAM,qCAAqC,CAAC;AACtE,OAAO,EAAE,wBAAwB,EAAE,MAAM,+CAA+C,CAAC;AACzF,OAAO,EAAE,wBAAwB,EAAE,MAAM,gCAAgC,CAAC;AAE1E,QAAQ,CAAC,gCAAgC,EAAE,GAAG,EAAE;IAC9C,IAAI,wBAAkD,CAAC;IACvD,IAAI,IAAiB,CAAC;IACtB,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAgB,CAAC;QAClE,wBAAwB,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;QAC5D,MAAM,WAAW,GAAG,OAAO,CAAC;QAC5B,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,WAAW,CAAC,CAAC;QACvF,MAAM,oBAAoB,GACxB,wBAAwB,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC;QACtF,MAAM,CAAC,oBAAoB,CAAC,CAAC,OAAO,iCAC/B,SAAS,KACZ,UAAU,EAAE,oBAAoB,CAAC,UAAU,IAC3C,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE,GAAG,EAAE;QAC9D,MAAM,aAAa,GAAG,wBAAwB,CAAC,sBAAsB,EAAE,CAAC,gBAAgB,CAAC;QACzF,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6EAA6E,EAAE,GAAG,EAAE;QACrF,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,wBAAwB,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,CAAC;QAC9D,MAAM,aAAa,GAAG,wBAAwB,CAAC,sBAAsB,EAAE,CAAC,gBAAgB,CAAC;QACzF,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { BuyTogether } from '@uxshop/storefront-core/dist/modules/buy-together/BuyTogetherTypes';\nimport { buyTogetherData } from '../__mocks__/buy-together-data.mock';\nimport { buyTogetherComponentData } from '../__mocks__/buy-together-component-data.mock';\nimport { FrontBuyTogetherResponse } from '../front-buy-together-response';\n\ndescribe('FrontBuyTogetherResponse Class', () => {\n  let frontBuyTogetherResponse: FrontBuyTogetherResponse;\n  let data: BuyTogether;\n  beforeEach(() => {\n    data = JSON.parse(JSON.stringify(buyTogetherData)) as BuyTogether;\n    frontBuyTogetherResponse = new FrontBuyTogetherResponse(data);\n  });\n\n  it('It should change selected variation by variationId', () => {\n    const variationId = 9480237;\n    const variation = data.product.variations.find(({ id }) => Number(id) === variationId);\n    const productWithVariation =\n      frontBuyTogetherResponse.changeByVariationSelected(variationId).getResponse.product;\n    expect(productWithVariation).toEqual({\n      ...variation,\n      variations: productWithVariation.variations,\n    });\n  });\n\n  it('It should adapter to component data for buy-together', () => {\n    const componentData = frontBuyTogetherResponse.adapterToComponentData().getComponentData;\n    expect(componentData).toEqual(buyTogetherComponentData);\n  });\n\n  it('It should return null in adapterToComponentData when no exist pivot product', () => {\n    data.productsPivot = [];\n    frontBuyTogetherResponse = new FrontBuyTogetherResponse(data);\n    const componentData = frontBuyTogetherResponse.adapterToComponentData().getComponentData;\n    expect(componentData).toEqual(null);\n  });\n});\n"]}