{"version":3,"file":"front-buy-together.service.spec.js","sourceRoot":"","sources":["../../../../../src/components/buy-together/services/test/front-buy-together.service.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { BuyTogether } from '@uxshop/storefront-core/dist/modules/buy-together/BuyTogetherTypes';\nimport { buyTogetherData } from '../__mocks__/buy-together-data.mock';\n\njest.mock('@uxshop/storefront-core');\n\nimport { FrontBuyTogetherService } from '../front-buy-together.service';\n\ndescribe('FrontBuyTogetherService', () => {\n  const service = new FrontBuyTogetherService();\n  const data = buyTogetherData as BuyTogether;\n\n  it('It should change Color for data api and produtCard', () => {\n    const { productCard, productTargetUpdated } = service.changeColor('266425', data.product);\n    const color = {\n      id: 266425,\n      name: 'Lilas Claro',\n      slug: 'lilas-claro',\n      hexadecimal: '#A565A1',\n      position: 2,\n    };\n    const image = {\n      productId: null,\n      src: 'https://optimizer.dchomolog.dooca.store/103779/products/ct23970002-a-107x1-1.jpg?v=1696602536',\n      alt: null,\n      colorIds: [266425],\n      variationIds: [],\n      position: 2,\n    };\n    const idVariationSelected = '9480237';\n    expect(productTargetUpdated.color).toEqual(color);\n    expect(productTargetUpdated.id).toEqual(idVariationSelected);\n    expect(productTargetUpdated.images).toEqual([image]);\n    expect(productCard.id).toEqual(idVariationSelected);\n    expect(productCard.image.src).toEqual(image.src);\n    expect(\n      productCard.selectVariations.find(({ selectType }) => selectType === 'color').currentValue,\n    ).toEqual(color.id);\n  });\n\n  it('It should change Attribute for data api and produtCard', () => {\n    const { productCard, productTargetUpdated } = service.changeAttribute('462521', data.product);\n    const attribute = {\n      id: 462521,\n      name: '36',\n      slug: '36',\n      attributeId: 74679,\n      attributeName: 'Tamanho calçados',\n      position: 2,\n      isActive: true,\n    };\n    const idVariationSelected = '9480247';\n    expect(productTargetUpdated.attribute).toEqual(attribute);\n    expect(productTargetUpdated.id).toEqual(idVariationSelected);\n    expect(productCard.id).toEqual(idVariationSelected);\n    expect(\n      productCard.selectVariations.find(({ selectType }) => selectType === 'attributes')\n        .currentValue,\n    ).toEqual(attribute.id);\n  });\n\n  it('It should change AttributeSecondary for data api and produtCard', () => {\n    // Change Tamanho de Calçado for 36\n    const { productTargetUpdated: targetUpdate } = service.changeAttribute('462521', data.product);\n    // Change MAterial for couro\n    const { productCard, productTargetUpdated } = service.changeAttributeSecondary(\n      '462515',\n      targetUpdate,\n    );\n    const attributeSecondary = {\n      id: 462515,\n      name: 'Couro',\n      slug: 'couro',\n      attributeId: 74678,\n      attributeName: 'Material',\n      position: 1,\n      isActive: true,\n    };\n    const idVariationSelected = '9480246';\n    expect(productTargetUpdated.attributeSecondary).toEqual(attributeSecondary);\n    expect(productTargetUpdated.id).toEqual(idVariationSelected);\n    expect(productCard.id).toEqual(idVariationSelected);\n    expect(\n      productCard.selectVariations.find(({ selectType }) => selectType === 'secondaryAttributes')\n        .currentValue,\n    ).toEqual(attributeSecondary.id);\n  });\n});\n"]}