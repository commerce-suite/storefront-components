{"version":3,"file":"front-buy-together.service.js","sourceRoot":"","sources":["../../../../../../src/components/buy-together/services/__mocks__/front-buy-together.service.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAK3D,OAAO,EAAE,uBAAuB,EAAE,MAAM,+BAA+B,CAAC;AAGxE,MAAM,2BAA2B;IAC/B,oBAAoB,CAAC,IAA2B,EAAE,aAAsB;QACtE,MAAM,IAAI,KAAK,CAAC,2BAA2B,EAAE,IAAI,EAAE,aAAa,EAAE,EAAE,CAAC,CAAC;IACxE,CAAC;IAED,WAAW,CAAC,UAAkB,EAAE,aAAsB;QACpD,MAAM,IAAI,KAAK,CAAC,2BAA2B,EAAE,UAAU,EAAE,aAAa,EAAE,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,eAAe,CAAC,UAAkB,EAAE,aAAsB;QACxD,MAAM,IAAI,KAAK,CAAC,2BAA2B,EAAE,UAAU,EAAE,aAAa,EAAE,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,wBAAwB,CAAC,UAAkB,EAAE,aAAsB;QACjE,MAAM,IAAI,KAAK,CAAC,2BAA2B,EAAE,UAAU,EAAE,aAAa,EAAE,EAAE,CAAC,CAAC;IAC9E,CAAC;IAEM,KAAK,CAAC,yBAAyB;QACpC,OAAO,uBAAuB,CAAC,kCAAkC,CAC/D,eAA8B,CAC/B,CAAC;IACJ,CAAC;CACF;AACD,OAAO,EAAE,2BAA2B,IAAI,uBAAuB,EAAE,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { IChangeResult, IFrontBuyTogetherService } from '../front-buy-together.type';\nimport { IBuyTogetherComponentData } from '../../buy-together.type';\nimport { buyTogetherData } from './buy-together-data.mock';\nimport {\n  BuyTogether,\n  Product,\n} from '@uxshop/storefront-core/dist/modules/buy-together/BuyTogetherTypes';\nimport { FrontBuyTogetherAdapter } from '../front-buy-together.adapter';\nimport { IInputSelectDataEvent } from '../../../../components';\n\nclass FrontBuyTogetherServiceMock implements IFrontBuyTogetherService {\n  changeProductOptions(data: IInputSelectDataEvent, productTarget: Product): IChangeResult {\n    throw new Error(`Method not implemented. ${{ data, productTarget }}`);\n  }\n\n  changeColor(colorValue: string, productTarget: Product): IChangeResult {\n    throw new Error(`Method not implemented. ${{ colorValue, productTarget }}`);\n  }\n\n  changeAttribute(colorValue: string, productTarget: Product): IChangeResult {\n    throw new Error(`Method not implemented. ${{ colorValue, productTarget }}`);\n  }\n\n  changeAttributeSecondary(colorValue: string, productTarget: Product): IChangeResult {\n    throw new Error(`Method not implemented. ${{ colorValue, productTarget }}`);\n  }\n\n  public async getBuyTogetherByProductId(): Promise<IBuyTogetherComponentData> {\n    return FrontBuyTogetherAdapter.adapterIBuyTogetherToComponentData(\n      buyTogetherData as BuyTogether,\n    );\n  }\n}\nexport { FrontBuyTogetherServiceMock as FrontBuyTogetherService };\n"]}