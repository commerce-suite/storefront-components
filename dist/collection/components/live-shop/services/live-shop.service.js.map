{"version":3,"file":"live-shop.service.js","sourceRoot":"","sources":["../../../../src/components/live-shop/services/live-shop.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AAU1E,MAAM,OAAO,eAAe;IAGlB,KAAK,CAAC,WAAW;QACvB,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAChF,OAAO,MAAM,cAAc,CAAC,OAAO,CAAC;YAClC,MAAM,EAAE;gBACN,IAAI;gBACJ,MAAM;gBACN,gBAAgB;gBAChB,OAAO;gBACP,cAAc;gBACd,WAAW;gBACX,MAAM;gBACN,eAAe;gBACf,SAAS;gBACT,kBAAkB;gBAClB,sDAAsD;aACvD;YACD,MAAM,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;YAC5C,GAAG,EAAE;gBACH,KAAK,EAAE,CAAC,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC;aACtC;SACF,CAAC,CAAC;IACL,CAAC;IAEM,KAAK,CAAC,WAAW,CAAC,QAAgB;QACvC,IAAI,CAAC,YAAY,GAAG,MAAM,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC9D,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAEO,sCAAsC,CAC5C,KAA0B;;QAE1B,MAAM,OAAO,GAA8C,EAAE,CAAC;QAE9D,KAAK,MAAM,EAAE,IAAI,EAAE,IAAI,KAAK,EAAE,CAAC;YAC7B,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,MAAM,OAAO,GAAG,MAAA,MAAA,IAAI,CAAC,KAAK,0CAAE,EAAE,mCAAI,CAAC,CAAC;YAEpC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;gBAAE,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;YACjD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC;gBAAE,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YAEnE,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC;QAED,OAAO,MAAM,CAAC,WAAW,CACvB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC;YACxD,CAAC,SAAS;YACV,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;SAC3B,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,cAAc,CAAC,KAAgB;;QACrC,OAAO,MAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,WAAC,OAAA,MAAA,CAAC,CAAC,MAAM,0CAAE,MAAM,CAAA,EAAA,CAAC,mCAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC;IAEO,8BAA8B,CACpC,IAAa,EACb,WAAwB,EACxB,WAA4B;;QAE5B,MAAM,gBAAgB,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,eAAC,OAAA,MAAA,MAAA,KAAK,CAAC,CAAC,CAAC,0CAAE,KAAK,0CAAE,EAAE,CAAA,EAAA,CAAC,CAAC;QAE1E,MAAM,WAAW,GAAG,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;QAEhD,MAAM,MAAM,GAAG,WAAW;YACxB,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;;gBAC3B,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,OAAO;oBACL,EAAE,EAAE,MAAA,SAAS,CAAC,KAAK,0CAAE,EAAE;oBACvB,IAAI,EAAE,MAAA,SAAS,CAAC,KAAK,0CAAE,IAAI;oBAC3B,IAAI,EAAE,MAAA,SAAS,CAAC,KAAK,0CAAE,IAAI;oBAC3B,WAAW,EAAE,MAAA,SAAS,CAAC,KAAK,0CAAE,WAAW;oBACzC,KAAK,EAAE,CAAA,MAAA,MAAA,SAAS,CAAC,KAAK,0CAAE,KAAK,0CAAE,GAAG,EAAC,CAAC,CAAC,EAAE,GAAG,EAAE,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI;oBAC9E,KAAK,EAAE,SAAS,CAAC,KAAK;oBACtB,YAAY,EAAE,CAAA,MAAA,MAAA,SAAS,CAAC,MAAM,0CAAG,CAAC,CAAC,0CAAE,GAAG,EAAC,CAAC,CAAC,EAAE,GAAG,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI;oBAClF,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,WAAC,OAAA,GAAG,GAAG,CAAC,MAAA,CAAC,CAAC,OAAO,mCAAI,CAAC,CAAC,CAAA,EAAA,EAAE,CAAC,CAAC;oBAC5D,YAAY,EAAE,SAAS,CAAC,YAAY;oBACpC,UAAU,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;;wBAAC,OAAA,CAAC;4BAC1B,EAAE,EAAE,CAAC,CAAC,EAAE;4BACR,KAAK,EAAE,CAAC,CAAC,KAAK;4BACd,OAAO,EAAE,CAAC,CAAC,OAAO;4BAClB,KAAK,EAAE,CAAA,MAAA,MAAA,CAAC,CAAC,MAAM,0CAAG,CAAC,CAAC,0CAAE,GAAG,EAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI;yBAC5D,CAAC,CAAA;qBAAA,CAAC;iBACJ,CAAC;YACJ,CAAC,CAAC;YACJ,CAAC,CAAC,IAAI,CAAC;QAET,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAE7E,uBACE,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,EACnB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAE,CAAA,MAAA,MAAA,IAAI,CAAC,MAAM,0CAAG,CAAC,CAAC,0CAAE,GAAG,EAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,EACjE,MAAM,EAAE,CAAC,GAAG,EAAE;;gBACZ,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAU,CAAC;gBACnC,MAAM,MAAM,GAA2C,EAAE,CAAC;gBAE1D,KAAK,MAAM,SAAS,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC;oBAC3C,MAAM,WAAW,GAAG,SAAS,CAAC,EAAE,CAAC;oBACjC,MAAM,MAAM,GAAG,MAAA,SAAS,CAAC,MAAM,mCAAI,EAAE,CAAC;oBAEtC,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;wBAC3B,IAAI,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC;4BAC3C,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BACxB,MAAM,CAAC,IAAI,CAAC;gCACV,GAAG,EAAE,KAAK,CAAC,GAAG;gCACd,WAAW;6BACZ,CAAC,CAAC;wBACL,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,OAAO,MAAM,CAAC;YAChB,CAAC,CAAC,EAAE,EACJ,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,SAAS,EAAE,IAAI,CAAC,YAAY,EAC5B,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EACvC,MAAM,EACN,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,IAAI,EAAE,SAAS,EACf,IAAI,EAAE,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,KAAI,WAAW,CAAC,MAAM,KAAK,QAAQ,EAC5D,SAAS,EAAE,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,MAAK,cAAc,EACjD,QAAQ,EAAE,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,QAAQ,mCAAI,CAAC,EACpC,MAAM,IACH,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,gBAAgB,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,EAChE;IACJ,CAAC;IAEO,KAAK,CAAC,sBAAsB;;QAClC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1C,MAAM,YAAY,GAAG,MAAA,IAAI,CAAC,YAAY,0CAAE,QAAQ,CAAC;QAEjD,MAAM,OAAO,GAAG,IAAI,CAAC,sCAAsC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAE5E,OAAO,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,WAAW,CAAC,EAAE,EAAE;YAC9D,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC;YACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAC/C,MAAM,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YAE9E,OAAO,IAAI,CAAC,8BAA8B,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,sBAAsB;QAC5B,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;;YAAC,OAAA,CAAC;gBAChD,EAAE,EAAE,MAAA,OAAO,CAAC,EAAE,mCAAI,IAAI;gBACtB,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ;gBACnD,SAAS,EAAE,OAAO,CAAC,MAAM,KAAK,cAAc;gBAC5C,QAAQ,EAAE,MAAA,OAAO,CAAC,QAAQ,mCAAI,CAAC;aAChC,CAAC,CAAA;SAAA,CAAC,CAAC;IACN,CAAC;IAEM,WAAW,CAAC,KAA2B,EAAE,OAAsB;QACpE,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,WAAC,OAAA,MAAA,CAAC,CAAC,QAAQ,mCAAI,CAAC,CAAA,EAAA,CAAC,CAAC,CAAC;QAEjE,MAAM,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;;YACpC,IAAI,IAAI,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI;gBAAE,OAAO,IAAI,CAAC;YAEtE,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,KAAK,cAAc,CAAC;YACxD,MAAM,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;YACxC,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,KAAK,QAAQ,CAAC;YAE7C,IAAI,aAAa,IAAI,CAAC,cAAc,EAAE,CAAC;gBACrC,uCACK,IAAI,KACP,IAAI,EAAE,CAAC,QAAQ,EACf,SAAS,EAAE,IAAI,EACf,YAAY,EAAE,MAAA,IAAI,CAAC,YAAY,mCAAI,IAAI,CAAC,QAAQ,EAChD,QAAQ,EAAE,WAAW,GAAG,CAAC,IACzB;YACJ,CAAC;YAED,IAAI,CAAC,aAAa,IAAI,cAAc,EAAE,CAAC;gBACrC,uCACK,IAAI,KACP,IAAI,EAAE,CAAC,QAAQ,EACf,SAAS,EAAE,KAAK,EAChB,QAAQ,EAAE,MAAA,IAAI,CAAC,YAAY,mCAAI,IAAI,CAAC,QAAQ,EAC5C,YAAY,EAAE,SAAS,IACvB;YACJ,CAAC;YAED,uCACK,IAAI,KACP,IAAI,EAAE,CAAC,QAAQ,EACf,SAAS,EAAE,aAAa,EACxB,QAAQ,EAAE,WAAW,GAAG,CAAC,IACzB;QACJ,CAAC,CAAC,CAAC;QAEH,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,eAAC,OAAA,CAAC,MAAA,CAAC,CAAC,QAAQ,mCAAI,CAAC,CAAC,GAAG,CAAC,MAAA,CAAC,CAAC,QAAQ,mCAAI,CAAC,CAAC,CAAA,EAAA,CAAC,CAAC;QACnE,OAAO,YAAY,CAAC;IACtB,CAAC;IAEM,KAAK,CAAC,QAAQ;QACnB,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC;QACzD,MAAM,YAAY,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAEnD,MAAM,QAAQ,GAAG,CAAC,GAAG,YAAY,EAAE,GAAG,YAAY,CAAC,CAAC;QAEpD,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;QAEjD,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF","sourcesContent":["import { LiveShopService, ProductService } from '@uxshop/storefront-core';\nimport {\n  LiveShop,\n  LiveShopProduct,\n} from '@uxshop/storefront-core/dist/modules/live-shop/LiveShopTypes';\nimport { IHighlightCardItem } from '../../../components';\nimport { IMessageItem, IProductItem } from '../../ui/highlight-card/highlight-card.type';\nimport { SocketMessage } from '../live-shop.type';\nimport { Product } from '@uxshop/storefront-core/dist/modules/product/ProductTypes';\n\nexport class LiveShopHandler {\n  private liveShopData: LiveShop;\n\n  private async getProducts() {\n    const productIds = this.liveShopData.products.map(product => product.productId);\n    return await ProductService.getList({\n      fields: [\n        'id',\n        'name',\n        'images { src }',\n        'price',\n        'priceCompare',\n        'productId',\n        'slug',\n        'hasPriceRange',\n        'balance',\n        'isSellOutOfStock',\n        'color { id, name, hexadecimal, slug, image { src } }',\n      ],\n      filter: { productIds, page: 0, first: 1000 },\n      agg: {\n        field: ['productId', 'colorId', 'id'],\n      },\n    });\n  }\n\n  public async getLiveShop(hashRoom: string): Promise<LiveShop> {\n    this.liveShopData = await LiveShopService.getByHash(hashRoom);\n    return this.liveShopData;\n  }\n\n  private groupByProductIdWithColorAndVariations(\n    edges: { node: Product }[],\n  ): Record<number, Product[][]> {\n    const grouped: Record<number, Record<number, Product[]>> = {};\n\n    for (const { node } of edges) {\n      const productId = node.productId;\n      const colorId = node.color?.id ?? 0;\n\n      if (!grouped[productId]) grouped[productId] = {};\n      if (!grouped[productId][colorId]) grouped[productId][colorId] = [];\n\n      grouped[productId][colorId].push(node);\n    }\n\n    return Object.fromEntries(\n      Object.entries(grouped).map(([productId, colorGroups]) => [\n        +productId,\n        Object.values(colorGroups),\n      ]),\n    );\n  }\n\n  private selectBaseNode(nodes: Product[]) {\n    return nodes.find(n => n.images?.length) ?? nodes[0];\n  }\n\n  private buildProductItemGroupedByColor(\n    base: Product,\n    colorGroups: Product[][],\n    liveProduct: LiveShopProduct,\n  ): IProductItem {\n    const validColorGroups = colorGroups.filter(group => group[0]?.color?.id);\n\n    const shouldGroup = validColorGroups.length > 1;\n\n    const colors = shouldGroup\n      ? validColorGroups.map(group => {\n          const variation = group[0];\n          return {\n            id: variation.color?.id,\n            name: variation.color?.name,\n            slug: variation.color?.slug,\n            hexadecimal: variation.color?.hexadecimal,\n            image: variation.color?.image?.src ? { src: variation.color.image.src } : null,\n            price: variation.price,\n            productImage: variation.images?.[0]?.src ? { src: variation.images[0].src } : null,\n            balance: group.reduce((sum, v) => sum + (v.balance ?? 0), 0),\n            priceCompare: variation.priceCompare,\n            variations: group.map(v => ({\n              id: v.id,\n              price: v.price,\n              balance: v.balance,\n              image: v.images?.[0]?.src ? { src: v.images[0].src } : null,\n            })),\n          };\n        })\n      : null;\n\n    const color = base.color;\n    const gridId = color ? `${base.productId}-${color.id}` : `${base.productId}`;\n\n    return {\n      id: +base.productId,\n      name: base.name,\n      image: base.images?.[0]?.src ? { src: base.images[0].src } : null,\n      images: (() => {\n        const seenSrcs = new Set<string>();\n        const result: { src: string; variationId: string }[] = [];\n\n        for (const variation of colorGroups.flat()) {\n          const variationId = variation.id;\n          const images = variation.images ?? [];\n\n          for (const image of images) {\n            if (image?.src && !seenSrcs.has(image.src)) {\n              seenSrcs.add(image.src);\n              result.push({\n                src: image.src,\n                variationId,\n              });\n            }\n          }\n        }\n\n        return result;\n      })(),\n      price: base.price,\n      priceBase: base.priceCompare,\n      balance: base.balance,\n      isSellOutOfStock: base.isSellOutOfStock,\n      gridId,\n      slug: base.slug,\n      type: 'product',\n      show: liveProduct?.status && liveProduct.status !== 'hidden',\n      highlight: liveProduct?.status === 'highlighting',\n      position: liveProduct?.position ?? 0,\n      colors,\n      ...(shouldGroup ? {} : { showStartingFrom: base.hasPriceRange }),\n    };\n  }\n\n  private async productsToItemsAdapter(): Promise<IProductItem[]> {\n    const products = await this.getProducts();\n    const liveProducts = this.liveShopData?.products;\n\n    const grouped = this.groupByProductIdWithColorAndVariations(products.edges);\n\n    return Object.entries(grouped).map(([productId, colorGroups]) => {\n      const allNodes = colorGroups.flat();\n      const baseNode = this.selectBaseNode(allNodes);\n      const liveProduct = liveProducts.find(p => p.productId === Number(productId));\n\n      return this.buildProductItemGroupedByColor(baseNode, colorGroups, liveProduct);\n    });\n  }\n\n  private messagesToItemsAdapter(): IMessageItem[] {\n    return this.liveShopData.messages.map(message => ({\n      id: message.id ?? null,\n      title: message.title,\n      content: message.content,\n      type: 'message',\n      show: message.status && message.status !== 'hidden',\n      highlight: message.status === 'highlighting',\n      position: message.position ?? 0,\n    }));\n  }\n\n  public updateItems(items: IHighlightCardItem[], message: SocketMessage): IHighlightCardItem[] {\n    const maxPosition = Math.max(...items.map(i => i.position ?? 0));\n\n    const updatedItems = items.map(item => {\n      if (item.id !== message.id || item.type !== message.type) return item;\n\n      const isHighlightOn = message.status === 'highlighting';\n      const wasHighlightOn = !!item.highlight;\n      const isHidden = message.status === 'hidden';\n\n      if (isHighlightOn && !wasHighlightOn) {\n        return {\n          ...item,\n          show: !isHidden,\n          highlight: true,\n          lastPosition: item.lastPosition ?? item.position,\n          position: maxPosition + 1,\n        };\n      }\n\n      if (!isHighlightOn && wasHighlightOn) {\n        return {\n          ...item,\n          show: !isHidden,\n          highlight: false,\n          position: item.lastPosition ?? item.position,\n          lastPosition: undefined,\n        };\n      }\n\n      return {\n        ...item,\n        show: !isHidden,\n        highlight: isHighlightOn,\n        position: maxPosition + 1,\n      };\n    });\n\n    updatedItems.sort((a, b) => (b.position ?? 0) - (a.position ?? 0));\n    return updatedItems;\n  }\n\n  public async getItems(): Promise<IHighlightCardItem[]> {\n    const productItems = await this.productsToItemsAdapter();\n    const messageItems = this.messagesToItemsAdapter();\n\n    const allItems = [...productItems, ...messageItems];\n\n    allItems.sort((a, b) => b.position - a.position);\n\n    return allItems;\n  }\n}\n"]}