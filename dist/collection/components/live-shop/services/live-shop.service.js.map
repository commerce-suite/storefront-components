{"version":3,"file":"live-shop.service.js","sourceRoot":"","sources":["../../../../src/components/live-shop/services/live-shop.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AAM1E,MAAM,OAAO,eAAe;IAGlB,KAAK,CAAC,WAAW;QACvB,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAChF,OAAO,MAAM,cAAc,CAAC,OAAO,CAAC;YAClC,MAAM,EAAE,CAAC,MAAM,EAAE,gBAAgB,EAAE,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE,MAAM,CAAC;YACzE,MAAM,EAAE,EAAE,UAAU,EAAE;SACvB,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,QAAgB;QAChC,IAAI,CAAC,YAAY,GAAG,MAAM,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,oDAAoD,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACrF,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,sBAAsB;QAC1B,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1C,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;;YAAC,OAAA,CAAC;gBACvC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;gBACZ,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,MAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAY,mCAAI,IAAI;gBACzC,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,SAAS,EAAE,IAAI,CAAC,YAAY;gBAC5B,KAAK,EAAE,EAAE;gBACT,OAAO,EAAE,EAAE;gBACX,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,KAAK;gBAChB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC,CAAA;SAAA,CAAC,CAAC;IACN,CAAC;IAED,sBAAsB;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;;YAAC,OAAA,CAAC;gBAChD,EAAE,EAAE,MAAA,OAAO,CAAC,EAAE,mCAAI,IAAI;gBACtB,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,KAAK;aACjB,CAAC,CAAA;SAAA,CAAC,CAAC;IACN,CAAC;IAED,KAAK,CAAC,QAAQ;QACZ,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC;QACzD,MAAM,YAAY,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QACnD,OAAO,CAAC,GAAG,YAAY,EAAE,GAAG,YAAY,CAAC,CAAC;IAC5C,CAAC;CACF","sourcesContent":["import { LiveShopService, ProductService } from '@uxshop/storefront-core';\nimport { LiveShop } from '@uxshop/storefront-core/dist/modules/live-shop/LiveShopTypes';\nimport { IHighlightCardItem } from '../../../components';\nimport { IImage } from '../../ui/product-card/product-card.type';\nimport { IMessageItem, IProductItem } from '../../ui/highlight-card/highlight-card.type';\n\nexport class LiveShopHandler {\n  private liveShopData: LiveShop;\n\n  private async getProducts() {\n    const productIds = this.liveShopData.products.map(product => product.productId);\n    return await ProductService.getList({\n      fields: ['name', 'images { src }', 'price', 'priceCompare', 'id', 'slug'],\n      filter: { productIds },\n    });\n  }\n\n  async getLiveShop(hashRoom: string): Promise<LiveShop> {\n    this.liveShopData = await LiveShopService.getByHash(hashRoom);\n    console.log('ðŸš€ ~ LiveShopHandler ~ getLiveShop ~ liveShopData:', this.liveShopData);\n    return this.liveShopData;\n  }\n\n  async productsToItemsAdapter(): Promise<IProductItem[]> {\n    const products = await this.getProducts();\n    return products.edges.map(({ node }) => ({\n      id: +node.id,\n      name: node.name,\n      image: (node.images[0] as IImage) ?? null,\n      price: node.price,\n      priceBase: node.priceCompare,\n      title: '',\n      content: '',\n      type: 'product',\n      highlight: false,\n      slug: node.slug,\n    }));\n  }\n\n  messagesToItemsAdapter(): IMessageItem[] {\n    return this.liveShopData.messages.map(message => ({\n      id: message.id ?? null,\n      title: message.title,\n      content: message.content,\n      type: 'message',\n      highlight: false,\n    }));\n  }\n\n  async getItems(): Promise<IHighlightCardItem[]> {\n    const productItems = await this.productsToItemsAdapter();\n    const messageItems = this.messagesToItemsAdapter();\n    return [...productItems, ...messageItems];\n  }\n}\n"]}