{"file":"product-price-credit-card2.js","mappings":";;;AAAA,MAAM,eAAe,GAAG,6mCAA6mC,CAAC;AACtoC,qCAAe,eAAe;;MCSjB,sBAAsB;;;;;;;;;;IAOjC,MAAM;QACJ,MAAM,cAAc,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;QACtF,MAAM,oBAAoB,GAAG,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;QACxF,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,GAAG,WAAW,GAAG,WAAW,CAAC;QAElE,QACE,4DAAK,KAAK,EAAC,0CAA0C,IAClD,gBAAgB,IAAI,6DAAM,KAAK,EAAC,eAAe,IAAE,gBAAgB,CAAQ,EAC1E,6DAAM,KAAK,EAAC,eAAe,IACzB,6DAAM,KAAK,EAAC,WAAW,IAAE,cAAc,CAAQ,EAAC,GAAG,EAClD,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,WAAW,KAC/B,6DAAM,KAAK,EAAC,aAAa,oBAChB,6DAAM,KAAK,EAAC,WAAW,IAAE,IAAI,CAAC,OAAO,MAAS,SAAI,GAAG,EAC5D,6DAAM,KAAK,EAAC,WAAW,IAAE,oBAAoB,CAAQ,OAAE,YAAY,CAC9D,CACR,CACI,CACH,EACN;KACH;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/ui/product-price/product-price.scss?tag=product-price-credit-card","src/components/ui/product-price/snippets/credit-card/product-price-credit-card.tsx"],"sourcesContent":["@import '../../../style/variables/variables.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.product-price-container {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.payment-option {\n  font-size: 14px;\n\n  .price-compare {\n    text-decoration: line-through;\n    color: var(--fc-color-light-text-secondary);\n  }\n\n  .price-current {\n    .highlight {\n      font-weight: bold;\n    }\n  }\n\n  &-simple,\n  &-billet,\n  &-pix {\n    display: flex;\n    flex-direction: column;\n\n    .highlight {\n      font-size: 16px;\n    }\n  }\n\n  &-creditCard {\n    display: flex;\n    flex-direction: column;\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport { currencyFormat } from '../../../../../utils/utils';\nimport { CreditCardPrice } from '../../product-price.type';\n\n@Component({\n  tag: 'product-price-credit-card',\n  styleUrl: '../../product-price.scss',\n  shadow: false,\n  scoped: false,\n})\nexport class ProductPriceCreditCard implements CreditCardPrice {\n  @Prop() price: number;\n  @Prop() priceCompare?: number;\n  @Prop() parcels: number;\n  @Prop() parcelPrice: number;\n  @Prop() hasInterest: boolean;\n\n  render() {\n    const formattedPrice = currencyFormat(this.price);\n    const formattedCompare = this.priceCompare ? currencyFormat(this.priceCompare) : null;\n    const formattedParcelPrice = this.parcelPrice ? currencyFormat(this.parcelPrice) : null;\n    const interestText = this.hasInterest ? 'com juros' : 'sem juros';\n\n    return (\n      <div class=\"payment-option payment-option-creditCard\">\n        {formattedCompare && <span class=\"price-compare\">{formattedCompare}</span>}\n        <span class=\"price-current\">\n          <span class=\"highlight\">{formattedPrice}</span>{' '}\n          {this.parcels && this.parcelPrice && (\n            <span class=\"credit-info\">\n              em at√© <span class=\"highlight\">{this.parcels}x</span> de{' '}\n              <span class=\"highlight\">{formattedParcelPrice}</span> {interestText}\n            </span>\n          )}\n        </span>\n      </div>\n    );\n  }\n}\n"],"version":3}