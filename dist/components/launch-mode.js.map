{"file":"launch-mode.js","mappings":"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","names":["LaunchMode"],"sources":["src/components/launch-mode/constants/defaultContent.ts","src/components/launch-mode/launch-mode.service.ts","src/components/launch-mode/constants/errorMessages.ts","src/components/launch-mode/launch-mode.scss?tag=launch-mode","src/components/launch-mode/launch-mode.tsx"],"sourcesContent":["import { ILaunchMode } from './../lauch-mode.type';\n\nexport const defaultContent: ILaunchMode = {\n  title: 'Modo lançamento',\n  caption: '<p>Utilize a senha para acessar a loja.</p>',\n  password: '1234',\n  is_active: false,\n  color_title: '#000000',\n  color_button: '#000000',\n  color_caption: '#222222',\n};\n","import { AppService } from '@uxshop/storefront-core';\nimport { defaultContent } from './constants/defaultContent';\n\nexport class LaunchModeService {\n  public async getAppContent() {\n    try {\n      const { content } = await AppService.getBySlug('modo-lancamento');\n      return JSON.parse(content);\n    } catch (error) {\n      console.error(error);\n      return defaultContent;\n    }\n  }\n\n  public async validatePassword(formData: FormData) {\n    const url = `${window.dooca.base_url}/action/launch-mode/validate`;\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(JSON.stringify(error));\n      }\n\n      return response.json();\n    } catch (error) {\n      console.error('LaunchModeService - validatePassword', { error });\n      throw error;\n    }\n  }\n}\n","export const ERROR_MESSAGES = {\n  invalid_password: 'Senha incorreta.',\n  inactive_mode: 'O modo lançamento está inativo no momento.',\n  default: 'Ocorreu um erro, tente novamente mais tarde.',\n} as const;\n\nexport type ErrorCode = keyof typeof ERROR_MESSAGES;\n","@import '../../style/mixins/button';\n@import '../../style/mixins/screen-media';\n@import '../../style/mixins/spinner-loading.scss';\n\nbody {\n  margin: 0;\n}\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.loading-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparentize(#000000, 0.5);\n  z-index: 9999;\n\n  .spinner {\n    @include simple-spinner;\n  }\n\n  &.-initial-loading {\n    background-color: transparent;\n    .spinner {\n      @include simple-spinner(#000000);\n    }\n  }\n}\n\n.launch-mode {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n\n  &-container {\n    padding: 16px;\n\n    @include for-tablet {\n      padding: 0;\n    }\n  }\n\n  &-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 32px;\n    text-align: center;\n    width: 480px;\n\n    &-label {\n      display: flex;\n      flex-direction: column;\n      gap: 8px;\n\n      h1,\n      div {\n        margin: 0;\n      }\n\n      h1 {\n        color: var(--launch-title, #ffffff);\n      }\n\n      div {\n        color: var(--launch-caption, #ffffff);\n      }\n    }\n\n    &-message {\n      display: flex;\n      justify-content: center;\n      padding: 16px;\n      border-radius: 12px;\n      background: #ffffff;\n      border: 1px solid #cccccc66;\n      width: 100%;\n\n      &-error {\n        color: #dc3545;\n      }\n    }\n  }\n\n  &-form {\n    width: 100%;\n    &-content {\n      display: flex;\n      flex-direction: column;\n      gap: 16px;\n\n      @include for-tablet {\n        flex-direction: row;\n      }\n\n      &-input {\n        display: flex;\n        position: relative;\n        width: 100%;\n\n        @include for-tablet {\n          flex: 1;\n        }\n\n        input {\n          padding: 12px 48px 12px 24px;\n          border: 1px solid #e1e5e9;\n          background: #f8f9fa;\n          width: 100%;\n          font-size: 12px;\n\n          &::placeholder {\n            color: #6c757d;\n          }\n\n          &:focus,\n          &:hover {\n            border-color: var(--launch-button-bg, #667eea);\n          }\n\n          &:focus {\n            outline: none;\n            background: #ffffff;\n          }\n        }\n\n        .password-toggle-btn {\n          position: absolute;\n          right: 12px;\n          top: 50%;\n          transform: translateY(-50%);\n          background: transparent;\n          border: none;\n          cursor: pointer;\n          padding: 4px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: color 0.2s ease;\n        }\n      }\n\n      &-button {\n        @include front-button;\n        font-size: 12px;\n        background-color: var(--launch-button-bg, #667eea);\n        padding: 14px 48px;\n\n        @include for-tablet {\n          width: auto;\n          white-space: nowrap;\n        }\n\n        &:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n      }\n    }\n  }\n}\n","import { Component, Event, EventEmitter, h, Host, State, getAssetPath } from '@stencil/core';\nimport { LaunchModeService } from './launch-mode.service';\nimport { ILaunchMode } from './lauch-mode.type';\nimport { defaultContent } from './constants/defaultContent';\nimport { ERROR_MESSAGES, ErrorCode } from './constants/errorMessages';\n\n@Component({\n  tag: 'launch-mode',\n  styleUrl: 'launch-mode.scss',\n  shadow: false,\n})\nexport class LaunchMode {\n  @State() launchModeData: ILaunchMode = defaultContent;\n  @State() launchModeService = new LaunchModeService();\n  @State() isLoading = false;\n  @State() isInitialLoading = true;\n  @State() userMessage: {\n    text: string;\n  };\n\n  @State() passwordInput = '';\n  @State() showPassword = false;\n\n  @Event() componentRendered: EventEmitter<void>;\n\n  private async load() {\n    try {\n      this.launchModeData = await this.launchModeService.getAppContent();\n    } catch (error) {\n      console.error('LaunchMode - load', { error });\n    } finally {\n      this.isInitialLoading = false;\n    }\n  }\n\n  private async handleSubmit(event: Event) {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append('password', this.passwordInput);\n    formData.append('form_type', 'launch_mode');\n\n    try {\n      this.isLoading = true;\n      await this.launchModeService.validatePassword(formData);\n\n      const baseUrl = window.dooca.base_url;\n      window.location.href = baseUrl;\n    } catch (error) {\n      console.error('LaunchMode - handleSubmit', { error });\n\n      const errorCode = this.parseErrorCode(error);\n      const errorMessage = ERROR_MESSAGES[errorCode] || ERROR_MESSAGES.default;\n\n      this.userMessage = {\n        text: errorMessage,\n      };\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private parseErrorCode(error: any): ErrorCode | null {\n    try {\n      const parsed = JSON.parse(error?.message || '{}');\n      return parsed.code || null;\n    } catch {\n      return null;\n    }\n  }\n\n  private handlePasswordChange(event: Event) {\n    const target = event.target as HTMLInputElement;\n    this.passwordInput = target.value;\n\n    if (this.userMessage) this.userMessage = null;\n  }\n\n  private togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async componentDidLoad() {\n    await this.load();\n    this.componentRendered.emit();\n  }\n\n  render() {\n    const {\n      title,\n      caption,\n      color_title: colorTitle,\n      color_caption: colorCaption,\n      color_button: colorButton,\n    } = this.launchModeData;\n\n    return (\n      <Host\n        style={{\n          '--launch-title': colorTitle,\n          '--launch-caption': colorCaption,\n          '--launch-button-bg': colorButton,\n        }}\n      >\n        {(this.isLoading || this.isInitialLoading) && (\n          <div class={`loading-container ${this.isInitialLoading ? '-initial-loading' : ''}`}>\n            <span class=\"spinner\" />\n          </div>\n        )}\n\n        {this.launchModeData && !this.isInitialLoading && (\n          <div class=\"launch-mode launch-mode-container\">\n            <div class=\"launch-mode-content\">\n              <div class=\"launch-mode-content-label\">\n                <h1 class=\"h1\">{title}</h1>\n                <div innerHTML={caption} />\n              </div>\n\n              <form onSubmit={e => this.handleSubmit(e)} class=\"launch-mode-form\">\n                <div class=\"launch-mode-form-content\">\n                  <div class=\"launch-mode-form-content-input\">\n                    <input\n                      name=\"password\"\n                      type={this.showPassword ? 'text' : 'password'}\n                      placeholder=\"Digite sua senha\"\n                      value={this.passwordInput}\n                      onInput={e => this.handlePasswordChange(e)}\n                      required\n                    />\n                    <button\n                      type=\"button\"\n                      class=\"password-toggle-btn\"\n                      onClick={() => this.togglePasswordVisibility()}\n                      aria-label={this.showPassword ? 'Ocultar senha' : 'Mostrar senha'}\n                    >\n                      <img\n                        src={getAssetPath(\n                          this.showPassword\n                            ? './assets/icons/eye-off.svg'\n                            : './assets/icons/eye.svg',\n                        )}\n                        alt={this.showPassword ? 'Ocultar senha' : 'Mostrar senha'}\n                      />\n                    </button>\n                  </div>\n\n                  <button\n                    class=\"launch-mode-form-content-button\"\n                    type=\"submit\"\n                    disabled={this.isLoading || !this.passwordInput.trim()}\n                  >\n                    {this.isLoading ? 'Destravando...' : 'Destravar'}\n                  </button>\n                </div>\n              </form>\n\n              {this.userMessage && (\n                <div class={`launch-mode-content-message launch-mode-content-message-error`}>\n                  <span>{this.userMessage.text}</span>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}