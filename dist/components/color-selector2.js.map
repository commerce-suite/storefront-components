{"file":"color-selector2.js","mappings":";;AAAA,MAAM,gBAAgB,GAAG,0nBAA0nB,CAAC;AACppB,4BAAe,gBAAgB;;MCOlB,aAAa;;;;;sBACG,EAAE;;;IAKrB,aAAa,CAAC,KAAa;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;IAEO,aAAa,CAAC,KAAa;QACjC,OAAO,KAAK,CAAC,KAAK;cACd;gBACE,eAAe,EAAE,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG;gBAC1C,cAAc,EAAE,OAAO;gBACvB,kBAAkB,EAAE,QAAQ;aAC7B;cACD;gBACE,eAAe,EAAE,KAAK,CAAC,WAAW;aACnC,CAAC;KACP;IAED,MAAM;QACJ,QACE,EAAC,IAAI,uDACH,4DAAK,KAAK,EAAC,gBAAgB,IACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,KACpB,cACE,GAAG,EAAE,KAAK,CAAC,EAAE,EACb,KAAK,EAAE;gBACL,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,EAAE;aACvC,EACD,OAAO,EAAE,MAAM,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,gBAC5B,KAAK,CAAC,IAAI,EACtB,KAAK,EAAE,KAAK,CAAC,IAAI,IAEjB,YAAM,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAS,CAC1D,CACV,CAAC,CACE,CACD,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/ui/color-selector/color-selector.scss?tag=color-selector","src/components/ui/color-selector/color-selector.tsx"],"sourcesContent":[".color-selector {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n\n  .color-option {\n    position: relative;\n    width: 25px;\n    height: 25px;\n    border: none;\n    background: transparent;\n    border-radius: 50%;\n    padding: 0;\n    cursor: pointer;\n    outline: none;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      box-sizing: border-box;\n      border: 1px solid #ededed;\n    }\n\n    &.active::before {\n      border: 2px solid #000000;\n    }\n\n    .color-dot {\n      width: 15px;\n      height: 15px;\n      border-radius: 50%;\n      background-color: currentColor;\n      z-index: 1;\n    }\n  }\n}\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\nimport { IColor } from '../product-card/product-card.type';\n\n@Component({\n  tag: 'color-selector',\n  styleUrl: 'color-selector.scss',\n  shadow: false,\n})\nexport class ColorSelector {\n  @Prop() colors: IColor[] = [];\n  @Prop() selectedId?: number;\n\n  @Event() colorSelected: EventEmitter<IColor>;\n\n  private onSelectColor(color: IColor) {\n    this.colorSelected.emit(color);\n  }\n\n  private getColorStyle(color: IColor) {\n    return color.image\n      ? {\n          backgroundImage: `url(${color.image.src})`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n        }\n      : {\n          backgroundColor: color.hexadecimal,\n        };\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"color-selector\">\n          {this.colors.map(color => (\n            <button\n              key={color.id}\n              class={{\n                'color-option': true,\n                'active': this.selectedId === color.id,\n              }}\n              onClick={() => this.onSelectColor(color)}\n              aria-label={color.name}\n              title={color.name}\n            >\n              <span class=\"color-dot\" style={this.getColorStyle(color)}></span>\n            </button>\n          ))}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}