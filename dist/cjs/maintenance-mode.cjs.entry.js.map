{"file":"maintenance-mode.entry.cjs.js","mappings":"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","names":["AppService","h","Host","transformMediaUrl","Env"],"sources":["src/components/maintenance-mode/constants/defaultContent.ts","src/components/maintenance-mode/maintenance-mode.service.ts","src/components/maintenance-mode/maintenance-mode.scss?tag=maintenance-mode","src/components/maintenance-mode/maintenance-mode.tsx"],"sourcesContent":["import { IMaintenanceMode } from '../maintenance-mode.type';\n\nexport const defaultContent: IMaintenanceMode = {\n  page_title: 'Loja em manutenção',\n  page_content:\n    'Estamos temporariamente em manutenção. Voltaremos em breve com novidades para você!',\n  active: false,\n  image: null,\n  newsletter: true,\n  colors: {\n    title: '#212529',\n    content: '#535862',\n    button_background: '#212529',\n    button_text: '#FFFFFF',\n    content_background: '#FFFFFF',\n  },\n};\n","import { AppService } from '@uxshop/storefront-core';\nimport { defaultContent } from './constants/defaultContent';\n\nexport class MaintenanceModeService {\n  public async getAppContent() {\n    try {\n      const { content } = await AppService.getBySlug('maintenance-mode');\n      return JSON.parse(content);\n    } catch (error) {\n      console.error(error);\n      return defaultContent;\n    }\n  }\n\n  public async submitNewsletter(formData: FormData) {\n    const url = `${window.dooca.base_url}/action/newsletter/add`;\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(JSON.stringify(error));\n      }\n\n      return response.json();\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n}\n","@import '../../style/mixins/button';\n@import '../../style/mixins/screen-media';\n@import '../../style/mixins/spinner-loading.scss';\n\nbody {\n  margin: 0;\n}\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.loading-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparentize(#000000, 0.5);\n  z-index: 9999;\n\n  .spinner {\n    @include simple-spinner;\n  }\n\n  &.-initial-loading {\n    background-color: transparent;\n    .spinner {\n      @include simple-spinner(#000000);\n    }\n  }\n}\n\n.maintenance-mode {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 24px;\n\n  @include for-desktop {\n    flex-direction: row;\n  }\n\n  &-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 24px;\n    text-align: center;\n    max-width: 480px;\n\n    @include for-desktop {\n      padding: 24px;\n    }\n\n    img {\n      border-radius: 12px;\n      object-fit: contain;\n      object-position: center;\n\n      width: 346px;\n      height: 172px;\n\n      @include for-desktop {\n        width: 432px;\n        height: 238px;\n      }\n    }\n\n    &-label {\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n      width: 346px;\n\n      @include for-desktop {\n        width: 100%;\n      }\n\n      h1,\n      p {\n        margin: 0;\n      }\n\n      h1 {\n        color: var(--maintenance-title);\n        font-weight: 700;\n        font-size: 28px;\n      }\n\n      p {\n        color: var(--maintenance-text);\n        font-size: 14px;\n      }\n    }\n\n    &-message {\n      display: flex;\n      justify-content: center;\n      gap: 16px;\n      padding: 20px;\n      border-radius: 12px;\n      background: #ffffff;\n      border: 1px solid #cccccc66;\n      width: 100%;\n\n      @include for-desktop {\n        width: 480px;\n        padding: 24px;\n      }\n\n      &-success {\n        color: #28a745;\n      }\n\n      &-error {\n        color: #dc3545;\n      }\n    }\n  }\n\n  &-form {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    padding: 20px;\n    border-radius: 12px;\n    background: #ffffff;\n    border: 1px solid #cccccc66;\n\n    @include for-desktop {\n      width: 480px;\n      padding: 24px;\n    }\n\n    &-label {\n      h2 {\n        font-size: 14px;\n        text-align: center;\n        margin: 0;\n        font-weight: 600;\n      }\n    }\n\n    &-content {\n      display: flex;\n      flex-direction: column;\n      gap: 24px;\n\n      &-input {\n        display: flex;\n        flex-direction: column;\n        gap: 24px;\n\n        input {\n          padding: 10px 14px;\n          border: 1px solid #d5d7da;\n          border-radius: 8px;\n          font-size: 16px;\n\n          &::placeholder {\n            color: #717680;\n          }\n\n          &:focus {\n            outline: none;\n            border: 1px solid #000000;\n          }\n        }\n      }\n\n      &-button {\n        @include front-button;\n        background-color: var(--maintenance-button-bg);\n        color: var(--maintenance-button-color);\n      }\n    }\n  }\n}\n","import { Component, Env, Event, EventEmitter, h, Host, Listen, State } from '@stencil/core';\nimport { IMaintenanceMode } from './maintenance-mode.type';\nimport { defaultContent } from './constants/defaultContent';\nimport { MaintenanceModeService } from './maintenance-mode.service';\nimport { transformMediaUrl } from '../../utils/utils';\n\n@Component({\n  tag: 'maintenance-mode',\n  styleUrl: 'maintenance-mode.scss',\n  shadow: false,\n})\nexport class MaintenanceMode {\n  @State() maintenanceModeData: IMaintenanceMode = defaultContent;\n  @State() maintenanceModeService = new MaintenanceModeService();\n  @State() recaptchaToken: string;\n  @State() isLoading = false;\n  @State() isInitialLoading = true;\n  @State() userMessage: {\n    text: string;\n    type: 'success' | 'error';\n  };\n\n  @Event() componentRendered: EventEmitter<void>;\n\n  private async load() {\n    try {\n      this.maintenanceModeData = await this.maintenanceModeService.getAppContent();\n    } catch (error) {\n      console.error('MaintenanceMode - load', { error });\n    } finally {\n      this.isInitialLoading = false;\n    }\n  }\n\n  private async handleSubmit(event: Event) {\n    event.preventDefault();\n\n    const form = event.target as HTMLFormElement;\n    const formData = new FormData(form);\n\n    formData.append('form_type', 'newsletter_app');\n\n    try {\n      this.isLoading = true;\n      await this.maintenanceModeService.submitNewsletter(formData);\n      this.userMessage = {\n        text: 'E-mail cadastrado',\n        type: 'success',\n      };\n    } catch (error) {\n      console.error('MaintenanceMode - handleSubmit', { error });\n      const defaultMessage = 'Ocorreu um erro, tente novamente mais tarde';\n      const errors = error?.message ? JSON.parse(error.message) : { errors: [defaultMessage] };\n      const [errorMessage] = errors.errors;\n\n      this.userMessage = {\n        text: errorMessage || defaultMessage,\n        type: 'error',\n      };\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  @Listen('tokenReceived')\n  handleTokenReceived(event: CustomEvent<string>) {\n    this.recaptchaToken = event.detail;\n  }\n\n  async componentDidLoad() {\n    await this.load();\n    this.componentRendered.emit();\n  }\n\n  render() {\n    const {\n      page_title: pageTitle,\n      page_content: pageContent,\n      colors,\n      image,\n      newsletter,\n    } = this.maintenanceModeData;\n\n    const {\n      content_background: contentBackground,\n      title,\n      content,\n      button_background: buttonBackground,\n      button_text: buttonText,\n    } = colors;\n\n    document.documentElement.style.setProperty('--maintenance-bg', contentBackground);\n\n    return (\n      <Host\n        style={{\n          '--maintenance-bg': contentBackground,\n          '--maintenance-title': title,\n          '--maintenance-text': content,\n          '--maintenance-button-bg': buttonBackground,\n          '--maintenance-button-color': buttonText,\n        }}\n      >\n        {(this.isLoading || this.isInitialLoading) && (\n          <div class={`loading-container ${this.isInitialLoading ? '-initial-loading' : ''}`}>\n            <span class=\"spinner\" />\n          </div>\n        )}\n\n        {this.maintenanceModeData && !this.isInitialLoading && (\n          <div class=\"maintenance-mode maintenance-mode-container\">\n            <div class=\"maintenance-mode-content\">\n              <div class=\"maintenance-mode-content-label\">\n                <h1>{pageTitle}</h1>\n                <p>{pageContent}</p>\n              </div>\n\n              {image && <img src={transformMediaUrl(image.src)} alt=\"maintenance-mode-image\" />}\n            </div>\n\n            {newsletter && !this.userMessage && (\n              <form\n                onSubmit={e => this.handleSubmit(e)}\n                name=\"newsletter\"\n                class=\"maintenance-mode-form\"\n              >\n                <div class=\"maintenance-mode-form-label\">\n                  <h2>Cadastre-se para receber novidades</h2>\n                </div>\n                <div class=\"maintenance-mode-form-content\">\n                  <div class=\"maintenance-mode-form-content-input\">\n                    <input type=\"text\" name=\"name\" placeholder=\"Seu nome\" required />\n                    <input type=\"email\" name=\"email\" placeholder=\"Seu email\" required />\n                  </div>\n\n                  <google-recaptcha siteKey={Env.GOOGLE_RECAPTCHA_SITE_KEY} />\n\n                  <button\n                    class=\"maintenance-mode-form-content-button\"\n                    type=\"submit\"\n                    disabled={!this.recaptchaToken}\n                  >\n                    Quero me inscrever\n                  </button>\n                </div>\n              </form>\n            )}\n\n            {this.userMessage && (\n              <div\n                class={`maintenance-mode-content-message maintenance-mode-content-message-${this.userMessage.type}`}\n              >\n                <span>{this.userMessage.text}</span>\n              </div>\n            )}\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}