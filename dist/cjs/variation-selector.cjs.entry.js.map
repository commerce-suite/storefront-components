{"file":"variation-selector.entry.cjs.js","mappings":";;;;;;AAAA,MAAM,oBAAoB,GAAG,qVAAqV,CAAC;AACnX,gCAAe,oBAAoB;;MCYtB,iBAAiB;;;;;;;;IAMpB,aAAa,CAAC,IAAS,EAAE,eAAqC;QACpE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YACpB,eAAe;YACf,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK;YACxB,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC,CAAC;KACJ;IAED,MAAM;QACJ,QACEA,kEAAK,KAAK,EAAE,cAAc,IAAI,CAAC,YAAY,GAAG,WAAW,GAAG,EAAE,EAAE,IAC7D,IAAI,CAAC,UAAU,CAAC,GAAG,CAClB,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,MAClEA,iBAAK,KAAK,EAAC,MAAM,IACfA,0BACE,WAAW,EAAE,WAAW,EACxB,QAAQ,EAAE,QAAQ,EAClB,WAAW,EAAE,OAAO,EACpB,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,YAAY,EACnB,OAAO,EAAE,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,UAAU,CAAC,GACvC,CACZ,CACP,CACF,CACG,EACN;KACH;;;;;;","names":["h"],"sources":["src/components/ui/variation-selector/variation-selector.scss?tag=variation-selector&encapsulation=scoped","src/components/ui/variation-selector/variation-selector.tsx"],"sourcesContent":[".variations {\n  display: flex;\n  flex-wrap: wrap;\n  --variations-gap: calc(var(--fc-margin-width) * 2);\n  gap: var(--variations-gap);\n  .item {\n    min-width: calc(50% - var(--variations-gap));\n    flex-grow: 2;\n  }\n\n  &.-showcase {\n    .item {\n      width: 100%;\n    }\n  }\n}\n","import { Component, Event, Prop, h, EventEmitter } from '@stencil/core';\nimport {\n  IInputSelectDataEvent,\n  ISelectVariation,\n  SelectAttributesType,\n} from '../product-card/product-card.type';\n\n@Component({\n  tag: 'variation-selector',\n  styleUrl: 'variation-selector.scss',\n  shadow: false,\n  scoped: true,\n})\nexport class VariationSelector {\n  @Prop() variations: ISelectVariation[];\n  @Prop() productId: number;\n  @Prop() showcaseMode: boolean;\n  @Event() inputSelect: EventEmitter<IInputSelectDataEvent>;\n\n  private onInputSelect(data: any, eventSelectType: SelectAttributesType) {\n    this.inputSelect.emit({\n      eventSelectType,\n      value: data.target.value,\n      productId: this.productId,\n    });\n  }\n\n  render() {\n    return (\n      <div class={`variations ${this.showcaseMode ? '-showcase' : ''}`}>\n        {this.variations.map(\n          ({ label, currentValue, options, selectId, placeholder, selectType }) => (\n            <div class=\"item\">\n              <front-select\n                placeholder={placeholder}\n                selectId={selectId}\n                optionsList={options}\n                label={label}\n                value={currentValue}\n                onInput={data => this.onInputSelect(data, selectType)}\n              ></front-select>\n            </div>\n          ),\n        )}\n      </div>\n    );\n  }\n}\n"],"version":3}