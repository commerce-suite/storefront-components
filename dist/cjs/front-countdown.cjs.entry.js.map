{"file":"front-countdown.entry.cjs.js","mappings":"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","names":["h","Host"],"sources":["src/components/ui/front-countdown/front-countdown.service.ts","src/components/ui/front-countdown/front-countdown.scss?tag=front-countdown&encapsulation=scoped","src/components/ui/front-countdown/front-countdown.tsx"],"sourcesContent":["import type { ICountdownService } from './ICountdownService';\nimport type { DateDifferenceType } from './front-countdown.type';\n\nexport class FrontCountdownService implements ICountdownService {\n  private oneSecond = 1000;\n  private intervalId: ReturnType<typeof setInterval>;\n\n  constructor(\n    private startDate: Date,\n    private endDate: Date,\n  ) {\n    if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {\n      throw new Error('Invalid date');\n    }\n    this.startCountdown();\n  }\n\n  private incrementOneSecond(): void {\n    this.startDate = new Date(this.startDate.getTime() + this.oneSecond);\n  }\n\n  startCountdown(): void {\n    this.intervalId = setInterval(() => {\n      this.incrementOneSecond();\n\n      if (this.isCountdownFinished()) {\n        this.stopCountdown();\n      }\n    }, this.oneSecond);\n  }\n\n  stopCountdown(): void {\n    clearInterval(this.intervalId);\n  }\n\n  getMillisecondsDifference(): number {\n    return this.endDate.getTime() - this.startDate.getTime();\n  }\n\n  isCountdownFinished(): boolean {\n    const diff = this.getMillisecondsDifference();\n    return diff <= 0;\n  }\n\n  getTimeDifference(): DateDifferenceType {\n    const diff = this.getMillisecondsDifference();\n\n    const daysDiff = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const hoursDiff = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const minutesDiff = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n    const secondsDiff = Math.floor((diff % (1000 * 60)) / 1000);\n\n    return {\n      daysDiff,\n      hoursDiff,\n      minutesDiff,\n      secondsDiff,\n    };\n  }\n}\n",":host {\n  display: block;\n}\n","import {\n  Component,\n  ComponentWillLoad,\n  Event,\n  EventEmitter,\n  Host,\n  Prop,\n  State,\n  Watch,\n  h,\n} from '@stencil/core';\nimport { FrontCountdownService } from './front-countdown.service';\n\n@Component({\n  tag: 'front-countdown',\n  styleUrl: 'front-countdown.scss',\n  shadow: false,\n  scoped: true,\n})\nexport class FrontCountdown implements ComponentWillLoad {\n  @Prop({ mutable: true }) startDate: string;\n  @Prop({ mutable: true }) endDate: string;\n\n  @State() days: string = '00';\n  @State() hours: string = '00';\n  @State() minutes: string = '00';\n  @State() seconds: string = '00';\n\n  @Event({ bubbles: true }) countdownFinished: EventEmitter;\n\n  private service: FrontCountdownService;\n\n  private resetCountdown() {\n    this.days = '00';\n    this.hours = '00';\n    this.minutes = '00';\n    this.seconds = '00';\n  }\n\n  private updateCountdown() {\n    if (this.service.isCountdownFinished()) {\n      this.resetCountdown();\n      this.countdownFinished.emit('finished');\n      return;\n    }\n\n    const { daysDiff, hoursDiff, minutesDiff, secondsDiff } = this.service.getTimeDifference();\n    this.days = String(daysDiff).padStart(2, '0');\n    this.hours = String(hoursDiff).padStart(2, '0');\n    this.minutes = String(minutesDiff).padStart(2, '0');\n    this.seconds = String(secondsDiff).padStart(2, '0');\n\n    requestAnimationFrame(this.updateCountdown.bind(this));\n  }\n\n  disconnectedCallback() {\n    if (!this.service) return;\n    this.service.stopCountdown();\n  }\n\n  private loadCountdown() {\n    if (!this.startDate || !this.endDate) return;\n    try {\n      this.service = new FrontCountdownService(\n        new Date(Number(this.startDate) || this.startDate),\n        new Date(Number(this.endDate) || this.endDate),\n      );\n      this.updateCountdown();\n    } catch {\n      this.resetCountdown();\n    }\n  }\n\n  @Watch('startDate')\n  watchStartDateChange() {\n    this.loadCountdown();\n  }\n\n  @Watch('endDate')\n  watchEndDateChange() {\n    this.loadCountdown();\n  }\n\n  componentWillLoad() {\n    this.loadCountdown();\n  }\n\n  render() {\n    return (\n      <Host class=\"timer\">\n        <div class=\"cell\">\n          <p class=\"time\">{this.days}</p>\n          <p class=\"unit\">dias</p>\n        </div>\n        <div class=\"cell\">\n          <p class=\"time\">{this.hours}</p>\n          <p class=\"unit\">horas</p>\n        </div>\n        <div class=\"cell\">\n          <p class=\"time\"> {this.minutes}</p>\n          <p class=\"unit\">minutos</p>\n        </div>\n        <div class=\"cell\">\n          <p class=\"time\">{this.seconds}</p>\n          <p class=\"unit\">segundos</p>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}