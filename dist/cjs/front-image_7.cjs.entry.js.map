{"file":"front-image.product-card.product-price.product-price-billet.product-price-credit-card.product-price-pix.product-price-simple.entry.cjs.js","mappings":"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","names":["getClassByProps","h","Host","productPriceCss","currencyFormat"],"sources":["src/components/ui/front-image/front-image.scss?tag=front-image","src/components/ui/front-image/front-image.tsx","src/components/ui/product-card/product-card.scss?tag=product-card","src/components/ui/product-card/product-card.tsx","src/components/ui/product-price/product-price.scss?tag=product-price","src/components/ui/product-price/product-price.tsx","src/components/ui/product-price/product-price.scss?tag=product-price-billet","src/components/ui/product-price/snippets/billet/product-price-billet.tsx","src/components/ui/product-price/product-price.scss?tag=product-price-credit-card","src/components/ui/product-price/snippets/credit-card/product-price-credit-card.tsx","src/components/ui/product-price/product-price.scss?tag=product-price-pix","src/components/ui/product-price/snippets/pix/product-price-pix.tsx","src/components/ui/product-price/product-price.scss?tag=product-price-simple","src/components/ui/product-price/snippets/simple/product-price-simple.tsx"],"sourcesContent":["@import '../../../style/mixins/skeleton.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.image-container {\n  position: relative;\n  margin: unset;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n    opacity: 1;\n    transition: opacity 1s;\n  }\n  &.-is-loading {\n    min-width: 100px;\n    min-height: 100px;\n    img {\n      opacity: 0;\n    }\n    @include skeleton;\n  }\n}\n","import { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { getClassByProps } from '../../../utils/utils';\n\n@Component({\n  tag: 'front-image',\n  styleUrl: 'front-image.scss',\n  scoped: false,\n  shadow: false,\n})\nexport class FrontImage {\n  @Prop({ mutable: true }) imageSrc: string;\n  @Prop({ mutable: true }) textAlt: string;\n  @Prop({ mutable: true }) figCaption: string;\n\n  @State() isSrcLoading = true;\n\n  private getImageClassByProps() {\n    const classProps = {\n      '-is-loading': this.isSrcLoading,\n    };\n    return `image-container ${getClassByProps(classProps)}`;\n  }\n\n  // private onSrcLoadError() {\n  //   this.imageSrc = getAssetPath('./assets/images/image-fallback.png');\n  //   setTimeout(() => {\n  //     this.isSrcLoading = false;\n  //   }, 500);\n  // }\n\n  private onSrcLoadFinish() {\n    setTimeout(() => {\n      this.isSrcLoading = false;\n    }, 500);\n  }\n\n  @Watch('imageSrc')\n  changeImageSrc() {\n    this.isSrcLoading = true;\n  }\n\n  render() {\n    return (\n      <Host>\n        <figure class={this.getImageClassByProps()}>\n          <img\n            src={this.imageSrc}\n            alt={this.textAlt || 'Imagem'}\n            onLoad={() => this.onSrcLoadFinish()}\n          />\n          {!!this.figCaption && <figcaption>{this.figCaption}</figcaption>}\n        </figure>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: inline-block;\n  font-size: 14px;\n  width: 100%;\n}\n\n.product-container {\n  display: flex;\n  flex-direction: column;\n  gap: var(--fc-gap-grid) 0;\n  color: var(--fc-color-light-text-default);\n\n  &.-inline {\n    flex-direction: row;\n    gap: var(--fc-gap-grid);\n  }\n}\n\n.product-container > .info {\n  grid-area: info;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  > .title {\n    display: inline-block;\n    margin-bottom: var(--fc-margin-width);\n    font-weight: 600;\n  }\n}\n\n.product-container > .image {\n  display: flex;\n  align-self: center;\n  max-width: 400px;\n  max-height: 400px;\n  justify-content: center;\n  &.-inline {\n    width: 100px;\n    height: 100px;\n    justify-content: center;\n  }\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\nimport { IProductCard } from './product-card.type';\nimport { getClassByProps } from '../../../utils/utils';\nimport { BasePrice, PaymentOption } from '../product-price/product-price.type';\n\n@Component({\n  tag: 'product-card',\n  styleUrl: 'product-card.scss',\n  shadow: false,\n  scoped: false,\n})\nexport class ProductCard {\n  @Prop() inline: boolean = false;\n  @Prop() customClass: string = '';\n  @Prop({ mutable: true }) product: IProductCard;\n  @Prop() basePrice: BasePrice;\n  @Prop() paymentOptions?: PaymentOption[] = [];\n  @Prop() showStartingFrom?: boolean = false;\n\n  getClassWithInline(className: string) {\n    const prosForClass = { '-inline': this.inline };\n    return `${className} ${getClassByProps(prosForClass)} ${this.customClass}`;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={this.getClassWithInline('product-container')}>\n          <front-image\n            class={this.getClassWithInline('image')}\n            imageSrc={this.product?.image?.src}\n            textAlt={this.product?.image?.alt || 'Imagem do produto'}\n          />\n          <div class=\"info\">\n            <span class=\"title\">{this.product?.name}</span>\n            <product-price\n              basePrice={this.basePrice}\n              paymentOptions={this.paymentOptions}\n              showStartingFrom={this.showStartingFrom}\n            />\n            <div class=\"product-card-content\">\n              <slot></slot>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","@import '../../../style/variables/variables.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.product-price-container {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.payment-option {\n  font-size: 14px;\n\n  .starting-from {\n    font-size: 12px;\n  }\n\n  .price-compare {\n    text-decoration: line-through;\n    color: var(--fc-color-light-text-secondary);\n  }\n\n  .price-current {\n    .highlight {\n      font-weight: bold;\n    }\n  }\n\n  &-simple,\n  &-billet,\n  &-pix {\n    display: flex;\n    flex-direction: column;\n\n    .highlight {\n      font-size: 16px;\n    }\n  }\n\n  &-creditCard {\n    display: flex;\n    flex-direction: column;\n  }\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\nimport { BasePrice, PaymentOption } from './product-price.type';\n\n@Component({\n  tag: 'product-price',\n  styleUrl: 'product-price.scss',\n  shadow: false,\n  scoped: false,\n})\nexport class ProductPrice {\n  @Prop() basePrice: BasePrice;\n  @Prop() paymentOptions?: PaymentOption[];\n  @Prop() showStartingFrom?: boolean = false;\n\n  private componentMap = {\n    simple: (option: PaymentOption) => (\n      <product-price-simple\n        price={option.price}\n        priceCompare={option.priceCompare}\n        showStartingFrom={this.showStartingFrom}\n      />\n    ),\n    billet: (option: PaymentOption) => (\n      <product-price-billet price={option.price} priceCompare={option.priceCompare} />\n    ),\n    creditCard: (option: PaymentOption) => (\n      <product-price-credit-card\n        price={option.price}\n        priceCompare={option.priceCompare}\n        parcels={option.parcels}\n        parcelPrice={option.parcelPrice}\n        hasInterest={option.hasInterest}\n      />\n    ),\n    pix: (option: PaymentOption) => (\n      <product-price-pix price={option.price} priceCompare={option.priceCompare} />\n    ),\n  };\n\n  private renderPaymentOption(option: PaymentOption) {\n    if (option.price <= 0) return null;\n\n    const renderFn = this.componentMap[option.type] || this.componentMap.simple;\n    return renderFn(option);\n  }\n\n  render() {\n    const options = this.paymentOptions || [];\n\n    if (!options.length) {\n      return (\n        <Host>\n          <div class=\"product-price-container\">\n            {this.renderPaymentOption({\n              type: 'simple',\n              price: this.basePrice.price,\n              priceCompare: this.basePrice.priceCompare,\n            })}\n          </div>\n        </Host>\n      );\n    }\n\n    return (\n      <Host>\n        <div class=\"product-price-container\">\n          {options.map(option => this.renderPaymentOption(option))}\n        </div>\n      </Host>\n    );\n  }\n}\n","@import '../../../style/variables/variables.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.product-price-container {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.payment-option {\n  font-size: 14px;\n\n  .starting-from {\n    font-size: 12px;\n  }\n\n  .price-compare {\n    text-decoration: line-through;\n    color: var(--fc-color-light-text-secondary);\n  }\n\n  .price-current {\n    .highlight {\n      font-weight: bold;\n    }\n  }\n\n  &-simple,\n  &-billet,\n  &-pix {\n    display: flex;\n    flex-direction: column;\n\n    .highlight {\n      font-size: 16px;\n    }\n  }\n\n  &-creditCard {\n    display: flex;\n    flex-direction: column;\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport { currencyFormat } from '../../../../../utils/utils';\nimport { BasePrice } from '../../product-price.type';\n\n@Component({\n  tag: 'product-price-billet',\n  styleUrl: '../../product-price.scss',\n  shadow: false,\n  scoped: false,\n})\nexport class ProductPriceBillet implements BasePrice {\n  @Prop() price: number;\n  @Prop() priceCompare?: number;\n\n  render() {\n    const formattedPrice = currencyFormat(this.price);\n    const formattedCompare = this.priceCompare ? currencyFormat(this.priceCompare) : null;\n\n    return (\n      <div class=\"payment-option payment-option-billet\">\n        {formattedCompare && <span class=\"price-compare\">{formattedCompare}</span>}\n        <span class=\"price-current\">\n          <span class=\"highlight\">{formattedPrice}</span> no boleto\n        </span>\n      </div>\n    );\n  }\n}\n","@import '../../../style/variables/variables.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.product-price-container {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.payment-option {\n  font-size: 14px;\n\n  .starting-from {\n    font-size: 12px;\n  }\n\n  .price-compare {\n    text-decoration: line-through;\n    color: var(--fc-color-light-text-secondary);\n  }\n\n  .price-current {\n    .highlight {\n      font-weight: bold;\n    }\n  }\n\n  &-simple,\n  &-billet,\n  &-pix {\n    display: flex;\n    flex-direction: column;\n\n    .highlight {\n      font-size: 16px;\n    }\n  }\n\n  &-creditCard {\n    display: flex;\n    flex-direction: column;\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport { currencyFormat } from '../../../../../utils/utils';\nimport { CreditCardPrice } from '../../product-price.type';\n\n@Component({\n  tag: 'product-price-credit-card',\n  styleUrl: '../../product-price.scss',\n  shadow: false,\n  scoped: false,\n})\nexport class ProductPriceCreditCard implements CreditCardPrice {\n  @Prop() price: number;\n  @Prop() priceCompare?: number;\n  @Prop() parcels: number;\n  @Prop() parcelPrice: number;\n  @Prop() hasInterest: boolean;\n\n  render() {\n    const formattedPrice = currencyFormat(this.price);\n    const formattedCompare = this.priceCompare ? currencyFormat(this.priceCompare) : null;\n    const formattedParcelPrice = this.parcelPrice ? currencyFormat(this.parcelPrice) : null;\n    const interestText = this.hasInterest ? 'com juros' : 'sem juros';\n\n    return (\n      <div class=\"payment-option payment-option-creditCard\">\n        {formattedCompare && <span class=\"price-compare\">{formattedCompare}</span>}\n        <span class=\"price-current\">\n          <span class=\"highlight\">{formattedPrice}</span>{' '}\n          {this.parcels && this.parcelPrice && (\n            <span class=\"credit-info\">\n              em até <span class=\"highlight\">{this.parcels}x</span> de{' '}\n              <span class=\"highlight\">{formattedParcelPrice}</span> {interestText}\n            </span>\n          )}\n        </span>\n      </div>\n    );\n  }\n}\n","@import '../../../style/variables/variables.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.product-price-container {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.payment-option {\n  font-size: 14px;\n\n  .starting-from {\n    font-size: 12px;\n  }\n\n  .price-compare {\n    text-decoration: line-through;\n    color: var(--fc-color-light-text-secondary);\n  }\n\n  .price-current {\n    .highlight {\n      font-weight: bold;\n    }\n  }\n\n  &-simple,\n  &-billet,\n  &-pix {\n    display: flex;\n    flex-direction: column;\n\n    .highlight {\n      font-size: 16px;\n    }\n  }\n\n  &-creditCard {\n    display: flex;\n    flex-direction: column;\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport { currencyFormat } from '../../../../../utils/utils';\nimport { BasePrice } from '../../product-price.type';\n\n@Component({\n  tag: 'product-price-pix',\n  styleUrl: '../../product-price.scss',\n  shadow: false,\n  scoped: false,\n})\nexport class ProductPricePix implements BasePrice {\n  @Prop() price: number;\n  @Prop() priceCompare?: number;\n\n  render() {\n    const formattedPrice = currencyFormat(this.price);\n    const formattedCompare = this.priceCompare ? currencyFormat(this.priceCompare) : null;\n\n    return (\n      <div class=\"payment-option payment-option-pix\">\n        {formattedCompare && <span class=\"price-compare\">{formattedCompare}</span>}\n        <span class=\"price-current\">\n          <span class=\"highlight\">{formattedPrice}</span> no pix\n        </span>\n      </div>\n    );\n  }\n}\n","@import '../../../style/variables/variables.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.product-price-container {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.payment-option {\n  font-size: 14px;\n\n  .starting-from {\n    font-size: 12px;\n  }\n\n  .price-compare {\n    text-decoration: line-through;\n    color: var(--fc-color-light-text-secondary);\n  }\n\n  .price-current {\n    .highlight {\n      font-weight: bold;\n    }\n  }\n\n  &-simple,\n  &-billet,\n  &-pix {\n    display: flex;\n    flex-direction: column;\n\n    .highlight {\n      font-size: 16px;\n    }\n  }\n\n  &-creditCard {\n    display: flex;\n    flex-direction: column;\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport { currencyFormat } from '../../../../../utils/utils';\nimport { BasePrice } from '../../product-price.type';\n\n@Component({\n  tag: 'product-price-simple',\n  styleUrl: '../../product-price.scss',\n  shadow: false,\n  scoped: false,\n})\nexport class ProductPriceSimple implements BasePrice {\n  @Prop() price: number;\n  @Prop() priceCompare?: number;\n  @Prop() showStartingFrom?: boolean = false;\n\n  render() {\n    const formattedPrice = currencyFormat(this.price);\n    const formattedCompare = this.priceCompare ? currencyFormat(this.priceCompare) : null;\n\n    return (\n      <div class=\"payment-option payment-option-simple\">\n        {this.showStartingFrom && <span class=\"starting-from\">A partir de</span>}\n        {formattedCompare && !this.showStartingFrom && (\n          <span class=\"price-compare\">{formattedCompare}</span>\n        )}\n        <span class=\"price-current\">\n          <span class=\"highlight\">{formattedPrice}</span>\n        </span>\n      </div>\n    );\n  }\n}\n"],"version":3}