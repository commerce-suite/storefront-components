{"file":"color-selector.custom-card.entry.js","mappings":";;AAAA,MAAM,gBAAgB,GAAG,0nBAA0nB,CAAC;AACppB,4BAAe,gBAAgB;;MCOlB,aAAa;;;;sBACG,EAAE;;;IAKrB,aAAa,CAAC,KAAa;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;IAEO,aAAa,CAAC,KAAa;QACjC,OAAO,KAAK,CAAC,KAAK;cACd;gBACE,eAAe,EAAE,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG;gBAC1C,cAAc,EAAE,OAAO;gBACvB,kBAAkB,EAAE,QAAQ;aAC7B;cACD;gBACE,eAAe,EAAE,KAAK,CAAC,WAAW;aACnC,CAAC;KACP;IAED,MAAM;QACJ,QACE,EAAC,IAAI,uDACH,4DAAK,KAAK,EAAC,gBAAgB,IACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,KACpB,cACE,GAAG,EAAE,KAAK,CAAC,EAAE,EACb,KAAK,EAAE;gBACL,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,EAAE;aACvC,EACD,OAAO,EAAE,MAAM,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,gBAC5B,KAAK,CAAC,IAAI,EACtB,KAAK,EAAE,KAAK,CAAC,IAAI,IAEjB,YAAM,KAAK,EAAC,WAAW,EAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAS,CAC1D,CACV,CAAC,CACE,CACD,EACP;KACH;;;;ACnDH,MAAM,aAAa,GAAG,wkBAAwkB,CAAC;AAC/lB,yBAAe,aAAa;;MCMf,UAAU;;;;yBACO,mCAAmC;;2BAEjC,EAAE;;IAKhC,gBAAgB;QACd,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;KAC/B;IAED,MAAM;QACJ,QACE,EAAC,IAAI,uDACH,4DAAK,KAAK,EAAE,eAAe,IAAI,CAAC,WAAW,EAAE,IAC3C,4DAAK,KAAK,EAAC,oBAAoB,IAC7B,2DAAI,KAAK,EAAC,0BAA0B,IAAE,IAAI,CAAC,SAAS,CAAM,EACzD,IAAI,CAAC,eAAe,KACnB,0DAAG,KAAK,EAAC,gCAAgC,IAAE,IAAI,CAAC,eAAe,CAAK,CACrE,CACG,EACN,4DAAK,KAAK,EAAC,qBAAqB,IAC9B,8DAAa,CACT,CACF,CACD,EACP;KACH;;;;;;;","names":[],"sources":["src/components/ui/color-selector/color-selector.scss?tag=color-selector","src/components/ui/color-selector/color-selector.tsx","src/components/ui/custom-card/custom-card.scss?tag=custom-card","src/components/ui/custom-card/custom-card.tsx"],"sourcesContent":[".color-selector {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n\n  .color-option {\n    position: relative;\n    width: 25px;\n    height: 25px;\n    border: none;\n    background: transparent;\n    border-radius: 50%;\n    padding: 0;\n    cursor: pointer;\n    outline: none;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      box-sizing: border-box;\n      border: 1px solid #ededed;\n    }\n\n    &.active::before {\n      border: 2px solid #000000;\n    }\n\n    .color-dot {\n      width: 15px;\n      height: 15px;\n      border-radius: 50%;\n      background-color: currentColor;\n      z-index: 1;\n    }\n  }\n}\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\nimport { IColor } from '../product-card/product-card.type';\n\n@Component({\n  tag: 'color-selector',\n  styleUrl: 'color-selector.scss',\n  shadow: false,\n})\nexport class ColorSelector {\n  @Prop() colors: IColor[] = [];\n  @Prop() selectedId?: number;\n\n  @Event() colorSelected: EventEmitter<IColor>;\n\n  private onSelectColor(color: IColor) {\n    this.colorSelected.emit(color);\n  }\n\n  private getColorStyle(color: IColor) {\n    return color.image\n      ? {\n          backgroundImage: `url(${color.image.src})`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n        }\n      : {\n          backgroundColor: color.hexadecimal,\n        };\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"color-selector\">\n          {this.colors.map(color => (\n            <button\n              key={color.id}\n              class={{\n                'color-option': true,\n                'active': this.selectedId === color.id,\n              }}\n              onClick={() => this.onSelectColor(color)}\n              aria-label={color.name}\n              title={color.name}\n            >\n              <span class=\"color-dot\" style={this.getColorStyle(color)}></span>\n            </button>\n          ))}\n        </div>\n      </Host>\n    );\n  }\n}\n","@import '../../../style/mixins/screen-media.scss';\n\n:host {\n  display: inline-block;\n  width: 100%;\n}\n\n.custom-card {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 24px;\n\n  &-header {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n\n    &-title,\n    &-description {\n      margin: 0;\n      text-align: center;\n    }\n\n    &-title {\n      font-family: var(--h1-ff);\n      color: var(--fc-color-primary);\n      font-weight: 700;\n      font-size: 24px;\n      text-transform: uppercase;\n      word-break: break-word;\n    }\n\n    &-description {\n      font-size: 16px;\n    }\n  }\n\n  @include for-desktop {\n    gap: 40px;\n  }\n}\n\n.custom-card-content:empty {\n  display: none;\n}\n","import { Component, Event, Host, EventEmitter, h, Prop, Element } from '@stencil/core';\n\n@Component({\n  tag: 'custom-card',\n  styleUrl: 'custom-card.scss',\n  shadow: false,\n})\nexport class CustomCard {\n  @Prop() cardTitle: string = 'Não perca! Live hoje às 19 horas.';\n  @Prop() cardDescription: string;\n  @Prop() customClass: string = '';\n\n  @Element() el: HTMLElement;\n  @Event() componentRendered: EventEmitter<void>;\n\n  componentDidLoad() {\n    this.componentRendered.emit();\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={`custom-card ${this.customClass}`}>\n          <div class=\"custom-card-header\">\n            <h2 class=\"custom-card-header-title\">{this.cardTitle}</h2>\n            {this.cardDescription && (\n              <p class=\"custom-card-header-description\">{this.cardDescription}</p>\n            )}\n          </div>\n          <div class=\"custom-card-content\">\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}